{
  "version": 3,
  "sources": ["node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "manifest.json", "content_src.js"],
  "sourcesContent": ["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "{\r\n  \"manifest_version\": 3,\r\n  \"name\": \"\u898B\u51FA\u3057\u30C1\u30A7\u30C3\u30AB\u30FC\",\r\n  \"version\": \"1.0\",\r\n  \"description\": \"\u30CB\u30E5\u30FC\u30B9\u898B\u51FA\u3057\u306B\u30AB\u30FC\u30BD\u30EB\u3092\u5F53\u3066\u3066\u30DC\u30BF\u30F3\u3092\u62BC\u3059\u3068\u3001AI\u304C\u672C\u6587\u3092\u8AAD\u307F\u53D6\u308A\u6B63\u3057\u3044\u898B\u51FA\u3057\u3092\u63D0\u793A\u3059\u308B\u62E1\u5F35\u6A5F\u80FD\u3067\u3059\u3002\",\r\n  \"permissions\": [\r\n    \"scripting\",\r\n    \"activeTab\"\r\n  ],\r\n  \"host_permissions\": [\r\n    \"https://www.goo.ne.jp/*\",\r\n    \"https://news.yahoo.co.jp/*\",\r\n    \"https://news.goo.ne.jp/*\"\r\n  ],\r\n  \"content_scripts\": [\r\n    {\r\n      \"matches\": [\r\n        \"https://*/*\"\r\n      ],\r\n      \"js\": [\r\n        \"content.js\"\r\n      ]\r\n    }\r\n  ],\r\n  \"action\": {\r\n    \"default_popup\": \"loading/fishing-animation.html\",\r\n    \"default_icon\": \"hello_extensions.png\"\r\n  },\r\n  \"background\": {\r\n    \"service_worker\": \"background.js\"\r\n  }\r\n}", "import { computePosition, shift, flip } from \"@floating-ui/dom\";\r\nimport manifest from \"./manifest.json\";\r\n\r\n(function () {\r\n  console.log(\"\u2705 content.js \u304C\u5B9F\u884C\u3055\u308C\u307E\u3057\u305F\");\r\n  // \u5B9A\u6570\u5B9A\u7FA9\r\n  let BASE_URLS = [];\r\n  try {\r\n    // manifest.json \u306E host_permissions \u304B\u3089 BASE_URLS \u3092\u53D6\u5F97\r\n    const hostPermissions = manifest.host_permissions;\r\n    if (Array.isArray(hostPermissions) && hostPermissions.length > 0) {\r\n      // \u73FE\u5728\u306E BASE_URL \u3068\u6BD4\u8F03\r\n      const currentBaseUrl = new URL(location.href).origin;\r\n      if (\r\n        hostPermissions.some((url) => new URL(url).origin === currentBaseUrl)\r\n      ) {\r\n        BASE_URLS = hostPermissions.map((url) => new URL(url).origin); // \u3059\u3079\u3066\u306E\u30AA\u30EA\u30B8\u30F3\u3092\u53D6\u5F97\r\n      } else {\r\n        throw new Error(\r\n          \"\u73FE\u5728\u306E BASE_URL \u304C host_permissions \u306B\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093\"\r\n        );\r\n      }\r\n    } else {\r\n      throw new Error(\"host_permissions \u304C\u898B\u3064\u304B\u3089\u306A\u3044\u304B\u7A7A\u3067\u3059\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"\u26A0\uFE0F BASE_URLS \u306E\u8A2D\u5B9A\u306B\u5931\u6557\u3057\u307E\u3057\u305F:\", error);\r\n    BASE_URLS = [\"*\"]; // \u5168\u3066\u306EURL\u3092\u5BFE\u8C61\u306B\u8A2D\u5B9A\r\n  }\r\n  console.log(`\uD83D\uDD17 BASE_URLS: ${BASE_URLS.join(\", \")}`);\r\n\r\n  // // \u30C8\u30C3\u30D7\u30DA\u30FC\u30B8\u5C02\u7528\uFF1AURL\u304C BASE_URLS \u306E\u3044\u305A\u308C\u304B\u3067\u59CB\u307E\u308B\u5834\u5408\u306E\u307F\u5B9F\u884C\r\n  // const isTargetPage = BASE_URLS.some((baseUrl) =>\r\n  //   new RegExp(\"^\" + baseUrl).test(location.href)\r\n  // );\r\n  // if (!isTargetPage) {\r\n  //   console.log(\"\u26A0\uFE0F \u3053\u306E\u30DA\u30FC\u30B8\u306F\u5BFE\u8C61\u5916\u3067\u3059\u3002\"); // \u5BFE\u8C61\u5916\u306E\u5834\u5408\u306E\u30E1\u30C3\u30BB\u30FC\u30B8\r\n  //   return; // \u51E6\u7406\u3092\u7D42\u4E86\r\n  // }\r\n\r\n  const TOOLTIP_STATES = {\r\n    DEFAULT: \"default\",\r\n    CLOSE: \"close\",\r\n    LOADING: \"loading\",\r\n  };\r\n\r\n  // \u30B0\u30ED\u30FC\u30D0\u30EB\u5909\u6570\r\n  let currentTooltip = null;\r\n  let isTooltipHovered = false;\r\n  let previousReferenceCount = -1;\r\n  const urlCache = new Map();\r\n  const loadingCache = new Set();\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u306E\u72B6\u614B\u3092\u66F4\u65B0\r\n  function updateButtonState(tooltip, state) {\r\n    const stateConfig = {\r\n      [TOOLTIP_STATES.DEFAULT]: {\r\n        text: \"\\u00A0\",\r\n        backgroundImage: \"none\",\r\n        classAction: \"remove\",\r\n      },\r\n      [TOOLTIP_STATES.CLOSE]: {\r\n        text: \"\u2716\",\r\n        backgroundImage: \"none\",\r\n        classAction: \"remove\",\r\n      },\r\n      [TOOLTIP_STATES.LOADING]: {\r\n        text: \"\\u00A0\",\r\n        backgroundImage:\r\n          'url(\\'data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" fill=\"%23ffffff\"><circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"%23ffffff\" stroke-width=\"10\" fill=\"none\" stroke-dasharray=\"200\" stroke-dashoffset=\"0\"><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"1s\" repeatCount=\"indefinite\"/></circle></svg>\\')',\r\n        classAction: \"add\",\r\n        additionalStyles: {\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"contain\",\r\n        },\r\n      },\r\n    };\r\n\r\n    const config = stateConfig[state];\r\n    if (!config) return;\r\n\r\n    tooltip.innerText = config.text;\r\n    tooltip.style.backgroundImage = config.backgroundImage;\r\n    tooltip.dataset.state = state;\r\n    tooltip.classList[config.classAction](\"loading\");\r\n\r\n    // \u8FFD\u52A0\u306E\u30B9\u30BF\u30A4\u30EB\u3092\u9069\u7528\r\n    if (config.additionalStyles) {\r\n      Object.assign(tooltip.style, config.additionalStyles);\r\n    }\r\n\r\n    const articleUrl = tooltip.dataset.url;\r\n    if (articleUrl) {\r\n      // \u30AD\u30E3\u30C3\u30B7\u30E5\u306B\u72B6\u614B\u3092\u4FDD\u5B58\r\n      const cachedData = urlCache.get(articleUrl) || {};\r\n      urlCache.set(articleUrl, { ...cachedData, state });\r\n    }\r\n\r\n    if (state === TOOLTIP_STATES.LOADING) {\r\n      loadingCache.add(tooltip.dataset.url);\r\n    } else {\r\n      loadingCache.delete(tooltip.dataset.url);\r\n    }\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u4F5C\u6210\r\n  function createTooltip(content, reference) {\r\n    const tooltip = document.createElement(\"button\");\r\n    Object.assign(tooltip.style, {\r\n      position: \"absolute\",\r\n      backgroundColor: \"rgba(74, 138, 87, 0.9)\",\r\n      color: \"rgba(255, 255, 255, 0.8)\",\r\n      padding: \"0\", // \u5185\u5074\u306E\u4F59\u767D\u3092\u524A\u9664\r\n      border: \"2px solid rgba(102, 102, 102, 0.9)\", // \u67A0\u7DDA\u306E\u8272\u3068\u592A\u3055\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      lineHeight: \"1\", // \u884C\u306E\u9AD8\u3055\u3092\u8A2D\u5B9A\r\n      height: `min(20px, ${reference.offsetHeight}px, ${reference.offsetWidth}px)`, // \u898B\u51FA\u3057\u3068\u540C\u3058\u9AD8\u3055\r\n      width: `min(20px, ${reference.offsetHeight}px, ${reference.offsetWidth}px)`, // \u898B\u51FA\u3057\u3068\u540C\u3058\u5E45\r\n      zIndex: \"1000\",\r\n      whiteSpace: \"nowrap\",\r\n      cursor: \"pointer\",\r\n      boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n    });\r\n    tooltip.className = \"tooltip\";\r\n    tooltip.innerText = content;\r\n    tooltip.dataset.popupButton = \"headline-check-open-popup-button\";\r\n\r\n    let articleUrl = getArticleUrl(reference);\r\n    let articleText =\r\n      reference.querySelector(\"a\")?.textContent.trim() ||\r\n      \"\u53D6\u5F97\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\"; // <a>\u30BF\u30B0\u306E\u30C6\u30AD\u30B9\u30C8\u3092\u53D6\u5F97\r\n    tooltip.dataset.url = articleUrl;\r\n\r\n    if (articleUrl) {\r\n      const cachedData = urlCache.get(articleUrl);\r\n      if (loadingCache.has(articleUrl)) {\r\n        updateButtonState(tooltip, TOOLTIP_STATES.LOADING);\r\n      } else if (cachedData && cachedData.state === TOOLTIP_STATES.CLOSE) {\r\n        updateButtonState(tooltip, TOOLTIP_STATES.CLOSE);\r\n      } else {\r\n        updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT);\r\n      }\r\n    } else {\r\n      updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT);\r\n    }\r\n\r\n    tooltip.addEventListener(\"click\", (e) =>\r\n      handleTooltipClick(e, articleText, tooltip, reference)\r\n    );\r\n    tooltip.addEventListener(\"mouseenter\", () => (isTooltipHovered = true));\r\n    tooltip.addEventListener(\"mouseleave\", () =>\r\n      handleTooltipMouseLeave(tooltip)\r\n    );\r\n\r\n    return tooltip;\r\n  }\r\n\r\n  // \u8A18\u4E8BURL\u3092\u53D6\u5F97\r\n  function getArticleUrl(reference) {\r\n    if (reference.tagName === \"A\") return reference.href;\r\n    const childLink = reference.querySelector(\"a\");\r\n    if (childLink) return childLink.href;\r\n    const parentLink = reference.closest(\"a\");\r\n    return parentLink ? parentLink.href : null;\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u30AF\u30EA\u30C3\u30AF\u6642\u306E\u51E6\u7406\r\n  function handleTooltipClick(event, articleText, tooltip, reference) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    const articleUrl = tooltip.dataset.url;\r\n    if (!articleUrl) {\r\n      console.error(\"\u8A18\u4E8BURL\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F\u3002\");\r\n      return;\r\n    }\r\n\r\n    if (tooltip.dataset.state === TOOLTIP_STATES.CLOSE) {\r\n      removeOverlay(reference);\r\n      updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT);\r\n      return;\r\n    }\r\n\r\n    if (loadingCache.has(articleUrl)) {\r\n      console.log(\"\u26A0\uFE0F \u73FE\u5728\u30ED\u30FC\u30C7\u30A3\u30F3\u30B0\u4E2D\u3067\u3059\u3002\");\r\n      return;\r\n    }\r\n\r\n    updateButtonState(tooltip, TOOLTIP_STATES.LOADING);\r\n    fetchHeadline(articleUrl, reference, articleText, tooltip).finally(() => {\r\n      if (tooltip.dataset.state === TOOLTIP_STATES.LOADING) {\r\n        updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT);\r\n      }\r\n    });\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u304B\u3089\u30DE\u30A6\u30B9\u304C\u96E2\u308C\u305F\u3068\u304D\u306E\u51E6\u7406\r\n  function handleTooltipMouseLeave(tooltip) {\r\n    if (!isTooltipHovered && tooltip.dataset.state !== TOOLTIP_STATES.LOADING) {\r\n      removeTooltip(tooltip);\r\n      currentTooltip = null;\r\n    } else {\r\n      isTooltipHovered = false;\r\n    }\r\n  }\r\n\r\n  // \u8A18\u4E8BURL\u3092\u30D0\u30C3\u30AF\u30A8\u30F3\u30C9\u306B\u9001\u4FE1\u3057\u3001\u898B\u51FA\u3057\u3092\u53D6\u5F97\r\n  function fetchHeadline(articleUrl, reference, articleText, tooltip) {\r\n    return new Promise((resolve, reject) => {\r\n      // \u30AD\u30E3\u30C3\u30B7\u30E5\u306BURL\u304C\u5B58\u5728\u3059\u308B\u5834\u5408\u306F\u30AD\u30E3\u30C3\u30B7\u30E5\u3092\u4F7F\u7528\r\n      if (urlCache.has(articleUrl)) {\r\n        const cachedData = urlCache.get(articleUrl);\r\n        if (cachedData && cachedData.data) {\r\n          displayOverlay(cachedData.data, reference, tooltip);\r\n          updateButtonState(tooltip, TOOLTIP_STATES.CLOSE);\r\n          resolve(); // \u51E6\u7406\u304C\u6210\u529F\u3057\u305F\u3053\u3068\u3092\u901A\u77E5\r\n          return;\r\n        }\r\n      }\r\n\r\n      fetch(\"http://localhost:8000/headline\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          url: articleUrl,\r\n          original_headline: articleText,\r\n        }), // \u8A18\u4E8BURL\u3092JSON\u5F62\u5F0F\u3067\u9001\u4FE1\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw new Error(`HTTP\u30A8\u30E9\u30FC: ${res.status}`);\r\n          }\r\n          return res.json();\r\n        }) // \u30EC\u30B9\u30DD\u30F3\u30B9\u3092JSON\u3068\u3057\u3066\u89E3\u6790\r\n        .then((data) => {\r\n          if (!data || typeof data !== \"object\" || !data.headline) {\r\n            throw new Error(\"\u4E0D\u6B63\u306A\u30C7\u30FC\u30BF\u5F62\u5F0F\u304C\u8FD4\u3055\u308C\u307E\u3057\u305F\");\r\n          }\r\n\r\n          // \u30AD\u30E3\u30C3\u30B7\u30E5\u306B\u4FDD\u5B58\r\n          urlCache.set(articleUrl, { data, state: TOOLTIP_STATES.CLOSE });\r\n          // \u898B\u51FA\u3057\u3092\u8868\u793A\r\n          displayOverlay(data, reference, tooltip);\r\n          updateButtonState(tooltip, TOOLTIP_STATES.CLOSE);\r\n          resolve(); // \u51E6\u7406\u304C\u6210\u529F\u3057\u305F\u3053\u3068\u3092\u901A\u77E5\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"\u26A0\uFE0F \u8A18\u4E8B\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002\", error);\r\n          updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT); // \u72B6\u614B\u3092\u30C7\u30D5\u30A9\u30EB\u30C8\u306B\u623B\u3059\r\n          reject(error); // \u30A8\u30E9\u30FC\u3092\u901A\u77E5\r\n        });\r\n    });\r\n  }\r\n\r\n  function removeOverlay(reference) {\r\n    const overlay = reference.querySelector(\".overlay\");\r\n    if (overlay) {\r\n      overlay.remove();\r\n    }\r\n\r\n    // \u30AD\u30E3\u30C3\u30B7\u30E5\u306E\u72B6\u614B\u3092\u30EA\u30BB\u30C3\u30C8\r\n    const articleUrl = getArticleUrl(reference);\r\n    if (articleUrl) {\r\n      const cachedData = urlCache.get(articleUrl) || {};\r\n      urlCache.set(articleUrl, {\r\n        ...cachedData,\r\n        state: TOOLTIP_STATES.DEFAULT,\r\n      });\r\n    }\r\n  }\r\n\r\n  // \u898B\u51FA\u3057\u3092\u30AA\u30FC\u30D0\u30FC\u30EC\u30A4\u3068\u3057\u3066\u8868\u793A\u3059\u308B\u95A2\u6570\r\n  function displayOverlay(data, reference, tooltip) {\r\n    if (!data || !data.headline) {\r\n      console.error(\"\u26A0\uFE0F \u30C7\u30FC\u30BF\u304C\u7121\u52B9\u3067\u3059\u3002\", data);\r\n      return;\r\n    }\r\n\r\n    let parentLi;\r\n    parentLi = reference.closest(\"li\");\r\n    if (!parentLi) {\r\n      parentLi = reference.closest(\"a\");\r\n      if (!parentLi) {\r\n        console.error(\"<a>\u8981\u7D20\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3067\u3057\u305F\u3002\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const parentWidth = parentLi.offsetWidth; // \u89AA<li>\u8981\u7D20\u306E\u5E45\u3092\u53D6\u5F97\r\n\r\n    // <a>\u30BF\u30B0\u306E\u30D5\u30A9\u30F3\u30C8\u30B5\u30A4\u30BA\u3092\u53D6\u5F97\r\n    const linkElement = reference.querySelector(\"a\") || reference.closest(\"a\");\r\n    const fontSize = linkElement\r\n      ? getComputedStyle(linkElement).fontSize\r\n      : \"14px\"; // \u30C7\u30D5\u30A9\u30EB\u30C8\u5024\u3092\u8A2D\u5B9A\r\n\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"overlay\"; // \u30AF\u30E9\u30B9\u540D\u3092\u8FFD\u52A0\r\n    overlay.innerText = `\uD83D\uDCA1 ${data.headline}`;\r\n    Object.assign(overlay.style, {\r\n      position: \"absolute\",\r\n      bottom: \"calc(100% + 4px)\", // \u5439\u304D\u51FA\u3057\u3092\u89AA\u8981\u7D20\u306E\u4E0A\u306B\u914D\u7F6E\r\n      left: \"50%\",\r\n      transform: \"translateX(-50%)\", // \u4E2D\u592E\u63C3\u3048\r\n      width: `${parentWidth}px`, // \u89AA<li>\u8981\u7D20\u306E\u5E45\u3092\u9069\u7528\r\n      backgroundColor: \"rgba(255, 255, 255, 0.9)\", // \u80CC\u666F\u8272\u3092\u767D\u306B\u5909\u66F4\r\n      color: \"rgba(0, 0, 0, 0.8)\", // \u30C6\u30AD\u30B9\u30C8\u8272\u3092\u9ED2\u306B\u5909\u66F4\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      fontSize: fontSize, // <a>\u30BF\u30B0\u306E\u30D5\u30A9\u30F3\u30C8\u30B5\u30A4\u30BA\u3092\u9069\u7528\r\n      boxShadow:\r\n        \"rgba(0, 0, 0, 0.1) 0px 4px 6px,0 0 0 1px rgba(74, 138, 87, 0.9)\", // \u5F71\u3092\u8FFD\u52A0\r\n      borderRadius: \"8px\", // \u89D2\u3092\u4E38\u304F\u3059\u308B\r\n      padding: \"4px\", // \u5185\u5074\u306E\u4F59\u767D\u3092\u8FFD\u52A0\r\n      zIndex: \"1000\",\r\n      pointerEvents: \"none\", // \u30AF\u30EA\u30C3\u30AF\u3092\u7121\u52B9\u5316\r\n      textAlign: \"center\",\r\n      \"font-family\": \"BIZ UDPGothic\", // \u30D5\u30A9\u30F3\u30C8\u3092\u6307\u5B9A\r\n    });\r\n    // \u5439\u304D\u51FA\u3057\u306E\u77E2\u5370\u3092SVG\u3067\u4F5C\u6210\r\n    const arrowSvg = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      \"svg\"\r\n    );\r\n    arrowSvg.setAttribute(\"width\", \"20\");\r\n    arrowSvg.setAttribute(\"height\", \"10\");\r\n    arrowSvg.setAttribute(\"viewBox\", \"0 0 20 10\");\r\n    arrowSvg.style.position = \"absolute\";\r\n    arrowSvg.style.bottom = \"-10px\"; // \u5439\u304D\u51FA\u3057\u306E\u4E0B\u306B\u914D\u7F6E\r\n    arrowSvg.style.left = \"80%\";\r\n    arrowSvg.style.transform = \"translateX(-80%)\";\r\n    arrowSvg.style.zIndex = \"999\";\r\n\r\n    // \u5439\u304D\u51FA\u3057\u306E\u77E2\u5370\u3092\u4F5C\u6210\r\n    const arrow = document.createElement(\"div\");\r\n    Object.assign(arrow.style, {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"-6px\", // \u5439\u304D\u51FA\u3057\u306E\u4E0B\u306B\u914D\u7F6E\r\n      left: \"80%\",\r\n      transform: \"translateX(-80%)\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderLeft: \"80px solid transparent\", // \u5916\u5074\u306E\u67A0\u306E\u5E45\r\n      borderRight: \"50px solid transparent\",\r\n      borderTop: \"6px solid rgba(74, 138, 87, 0.9)\", // \u5916\u5074\u306E\u67A0\u306E\u8272\uFF08\u5439\u304D\u51FA\u3057\u306E\u8F2A\u90ED\u8272\uFF09\r\n      zIndex: \"999\", // \u77E2\u5370\u3092\u30AA\u30FC\u30D0\u30FC\u30EC\u30A4\u306E\u4E0B\u306B\u914D\u7F6E\r\n    });\r\n\r\n    // \u5185\u5074\u306E\u77E2\u5370\u3092\u4F5C\u6210\r\n    const innerArrow = document.createElement(\"div\");\r\n    Object.assign(innerArrow.style, {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"-4px\", // \u5916\u5074\u77E2\u5370\u306E\u4E0A\u306B\u914D\u7F6E\r\n      left: \"80%\",\r\n      transform: \"translateX(-80%)\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      borderLeft: \"80px solid transparent\", // \u5185\u5074\u306E\u77E2\u5370\u306E\u5E45\r\n      borderRight: \"50px solid transparent\",\r\n      borderTop: \"4px solid rgba(230, 244, 234, 0.9)\", // \u5185\u5074\u306E\u77E2\u5370\u306E\u8272\uFF08\u5439\u304D\u51FA\u3057\u306E\u80CC\u666F\u8272\uFF09\r\n      zIndex: \"1000\", // \u5185\u5074\u77E2\u5370\u3092\u5916\u5074\u77E2\u5370\u306E\u4E0A\u306B\u914D\u7F6E\r\n    });\r\n\r\n    overlay.appendChild(arrow); // \u5916\u5074\u77E2\u5370\u3092\u8FFD\u52A0\r\n    overlay.appendChild(innerArrow); // \u5185\u5074\u77E2\u5370\u3092\u8FFD\u52A0\r\n\r\n    parentLi.style.position = \"relative\";\r\n    parentLi.appendChild(overlay);\r\n\r\n    // \u30DC\u30BF\u30F3\u306E\u72B6\u614B\u3092\u300C\u00D7\u300D\u306B\u5909\u66F4\r\n    updateButtonState(tooltip, TOOLTIP_STATES.CLOSE);\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u8868\u793A\u3059\u308B\u95A2\u6570\r\n  function showTooltip(reference, tooltip) {\r\n    computePosition(reference, tooltip, {\r\n      placement: \"right\", // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u53F3\u5074\u306B\u914D\u7F6E\r\n      middleware: [shift(), flip()],\r\n    }).then(({ x, y }) => {\r\n      Object.assign(tooltip.style, {\r\n        left: `${x - 20}px`,\r\n        top: `${y}px`,\r\n      });\r\n    });\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u524A\u9664\u3059\u308B\u95A2\u6570\r\n  function removeTooltip(tooltip) {\r\n    if (tooltip && tooltip.parentNode) {\r\n      tooltip.parentNode.removeChild(tooltip);\r\n    }\r\n  }\r\n\r\n  // \u898B\u51FA\u3057\u30EA\u30F3\u30AF\u6570\u3092\u30ED\u30B0\u306B\u8868\u793A\u3059\u308B\u95A2\u6570\r\n  function logReferenceCount(references) {\r\n    const currentCount = references.length;\r\n    if (currentCount !== previousReferenceCount) {\r\n      console.log(`\uD83D\uDFE1 \u898B\u51FA\u3057\u30EA\u30F3\u30AF\u6570\uFF1A${currentCount} \u4EF6`);\r\n      previousReferenceCount = currentCount; // \u524D\u56DE\u306E\u30EA\u30F3\u30AF\u6570\u3092\u66F4\u65B0\r\n    }\r\n  }\r\n\r\n  // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u8A2D\u5B9A\u3059\u308B\u95A2\u6570\r\n  function setupTooltips() {\r\n    // \u8A18\u4E8B\u8981\u7D20\u3092\u53D6\u5F97\uFF08<li>\u30BF\u30B0\u4EE5\u5916\u3082\u542B\u3080\uFF09\r\n    const references = Array.from(\r\n      document.querySelectorAll(\"ul > li, a\")\r\n    ).filter((element) => {\r\n      const link = element.querySelector(\"a\") || element.closest(\"a\"); // <a>\u30BF\u30B0\u3092\u53D6\u5F97\r\n      if (!link) {\r\n        console.warn(\"\u26A0\uFE0F \u8A18\u4E8B\u8981\u7D20\u306B<a>\u30BF\u30B0\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u305B\u3093:\", element);\r\n        return false; // <a>\u30BF\u30B0\u304C\u306A\u3044\u5834\u5408\u306F\u5BFE\u8C61\u5916\r\n      }\r\n\r\n      // BASE_URLS \u306B \"*\" \u304C\u542B\u307E\u308C\u3066\u3044\u308B\u5834\u5408\u3001\u3059\u3079\u3066\u306E\u30EA\u30F3\u30AF\u3092\u5BFE\u8C61\u306B\u3059\u308B\r\n      if (BASE_URLS.includes(\"*\")) {\r\n        return true;\r\n      }\r\n\r\n      // BASE_URLS \u306E\u3044\u305A\u308C\u304B\u3067\u59CB\u307E\u308B\u30EA\u30F3\u30AF\u306E\u307F\u5BFE\u8C61\r\n      return BASE_URLS.some((baseUrl) => link.href.startsWith(baseUrl));\r\n    });\r\n\r\n    logReferenceCount(references); // \u30EA\u30F3\u30AF\u6570\u3092\u30ED\u30B0\u306B\u8868\u793A\r\n\r\n    references.forEach((reference) => {\r\n      if (!reference.dataset.tooltipInitialized) {\r\n        reference.dataset.tooltipInitialized = \"true\"; // \u521D\u671F\u5316\u6E08\u307F\u30D5\u30E9\u30B0\u3092\u8A2D\u5B9A\r\n\r\n        // \u30DE\u30A6\u30B9\u30AA\u30FC\u30D0\u30FC\u6642\u306B\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u8868\u793A\r\n        reference.addEventListener(\"mouseenter\", () => {\r\n          const content = \"\\u00A0\"; // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u306E\u5185\u5BB9 \uFF08\u7A7A\u767D\u6587\u5B57\uFF09\r\n\r\n          // \u65E2\u5B58\u306E\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u524A\u9664\r\n          if (currentTooltip) {\r\n            removeTooltip(currentTooltip);\r\n            currentTooltip = null;\r\n          }\r\n\r\n          // \u65B0\u3057\u3044\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u4F5C\u6210\r\n          const tooltip = createTooltip(content, reference);\r\n          currentTooltip = tooltip; // \u73FE\u5728\u306E\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u66F4\u65B0\r\n\r\n          document.body.appendChild(tooltip);\r\n          showTooltip(reference, tooltip);\r\n\r\n          // \u89AA<li>\u8981\u7D20\u306E\u30B9\u30BF\u30A4\u30EB\u3092\u8ABF\u6574 overflow: hidden;\u306E\u5834\u5408overflow\u304C\u6B63\u5E38\u306B\u8868\u793A\u3055\u308C\u306A\u3044\u305F\u3081\r\n          const parentLi = reference.closest(\"li\");\r\n          if (parentLi) {\r\n            parentLi.style.overflow = \"visible\"; // overflow\u3092visible\u306B\u5909\u66F4\r\n          }\r\n\r\n          // const button = document.querySelector(\r\n          //   '[data-popup-button=\"headline-check-open-popup-button\"]'\r\n          // );\r\n          // if (button) {\r\n          //   button.addEventListener(\"click\", () => {\r\n          //     // \u30D0\u30C3\u30AF\u30B0\u30E9\u30A6\u30F3\u30C9\u30B9\u30AF\u30EA\u30D7\u30C8\u306B\u30E1\u30C3\u30BB\u30FC\u30B8\u3092\u9001\u4FE1\r\n          //     chrome.runtime.sendMessage(\r\n          //       { action: \"openPopup\" },\r\n          //       (response) => {\r\n          //         console.log(response.status); // \u30C7\u30D0\u30C3\u30B0\u7528\r\n          //       }\r\n          //     );\r\n          //   });\r\n          // }\r\n\r\n          // \u30ED\u30FC\u30C7\u30A3\u30F3\u30B0\u72B6\u614B\u304C\u6B8B\u3063\u3066\u3044\u308B\u5834\u5408\u306F\u89E3\u9664\r\n          // `<a>`\u30BF\u30B0\u3092\u53D6\u5F97\r\n          let articleUrl = null;\r\n          if (reference.tagName === \"A\") {\r\n            articleUrl = reference.href; // reference\u304C<a>\u30BF\u30B0\u306E\u5834\u5408\r\n          } else if (reference.querySelector(\"a\")) {\r\n            articleUrl = reference.querySelector(\"a\").href; // \u5B50\u8981\u7D20\u306B<a>\u30BF\u30B0\u304C\u3042\u308B\u5834\u5408\r\n          } else {\r\n            const parentLink = reference.closest(\"a\"); // \u89AA\u8981\u7D20\u306B<a>\u30BF\u30B0\u304C\u3042\u308B\u304B\u63A2\u7D22\r\n            if (parentLink) {\r\n              articleUrl = parentLink.href;\r\n            }\r\n          }\r\n          if (articleUrl && loadingCache.has(articleUrl)) {\r\n            updateButtonState(tooltip, TOOLTIP_STATES.DEFAULT);\r\n            loadingCache.delete(articleUrl);\r\n          }\r\n        });\r\n\r\n        // \u30DE\u30A6\u30B9\u30A2\u30A6\u30C8\u6642\u306B\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u524A\u9664\r\n        reference.addEventListener(\"mouseleave\", () => {\r\n          if (!isTooltipHovered && currentTooltip) {\r\n            removeTooltip(currentTooltip);\r\n            currentTooltip = null;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // DOM\u306E\u5909\u66F4\u3092\u76E3\u8996\u3057\u3066\u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u8A2D\u5B9A\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      // \u30AF\u30E9\u30B9\u5C5E\u6027\u304C\u5909\u66F4\u3055\u308C\u305F\u5834\u5408\r\n      if (\r\n        mutation.type === \"attributes\" &&\r\n        mutation.attributeName === \"class\"\r\n      ) {\r\n        const target = mutation.target;\r\n        if (target.classList.contains(\"active\")) {\r\n          console.log(`\uD83D\uDFE2 Active\u30AF\u30E9\u30B9\u304C\u5909\u66F4\u3055\u308C\u307E\u3057\u305F: ${target.id}`);\r\n          setupTooltips(); // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u518D\u8A2D\u5B9A\r\n        }\r\n      }\r\n\r\n      // \u5B50\u30CE\u30FC\u30C9\u304C\u8FFD\u52A0\u3055\u308C\u305F\u5834\u5408\r\n      if (mutation.type === \"childList\" && mutation.addedNodes.length > 0) {\r\n        setupTooltips(); // \u30C4\u30FC\u30EB\u30C1\u30C3\u30D7\u3092\u518D\u8A2D\u5B9A\r\n      }\r\n    });\r\n  });\r\n\r\n  // \u76E3\u8996\u5BFE\u8C61\u306E\u30CE\u30FC\u30C9\u3092\u6307\u5B9A\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true,\r\n    attributes: true, // \u5C5E\u6027\u306E\u5909\u66F4\u3092\u76E3\u8996\r\n    attributeFilter: [\"class\"], // \u30AF\u30E9\u30B9\u5C5E\u6027\u306E\u5909\u66F4\u306E\u307F\u76E3\u8996\r\n  });\r\n\r\n  // \u521D\u671F\u8A2D\u5B9A\r\n  setupTooltips();\r\n})();\r\n"],
  "mappings": "MAQA,IAAMA,EAAM,KAAK,IACXC,EAAM,KAAK,IACXC,EAAQ,KAAK,MAEnB,IAAMC,EAAeC,IAAM,CACzB,EAAGA,EACH,EAAGA,CACL,GACMC,GAAkB,CACtB,KAAM,QACN,MAAO,OACP,OAAQ,MACR,IAAK,QACP,EACMC,GAAuB,CAC3B,MAAO,MACP,IAAK,OACP,EACA,SAASC,GAAMC,EAAOC,EAAOC,EAAK,CAChC,OAAOC,EAAIH,EAAOI,EAAIH,EAAOC,CAAG,CAAC,CACnC,CACA,SAASG,GAASJ,EAAOK,EAAO,CAC9B,OAAO,OAAOL,GAAU,WAAaA,EAAMK,CAAK,EAAIL,CACtD,CACA,SAASM,EAAQC,EAAW,CAC1B,OAAOA,EAAU,MAAM,GAAG,EAAE,CAAC,CAC/B,CACA,SAASC,GAAaD,EAAW,CAC/B,OAAOA,EAAU,MAAM,GAAG,EAAE,CAAC,CAC/B,CACA,SAASE,GAAgBC,EAAM,CAC7B,OAAOA,IAAS,IAAM,IAAM,GAC9B,CACA,SAASC,GAAcD,EAAM,CAC3B,OAAOA,IAAS,IAAM,SAAW,OACnC,CACA,SAASE,EAAYL,EAAW,CAC9B,MAAO,CAAC,MAAO,QAAQ,EAAE,SAASD,EAAQC,CAAS,CAAC,EAAI,IAAM,GAChE,CACA,SAASM,GAAiBN,EAAW,CACnC,OAAOE,GAAgBG,EAAYL,CAAS,CAAC,CAC/C,CACA,SAASO,GAAkBP,EAAWQ,EAAOC,EAAK,CAC5CA,IAAQ,SACVA,EAAM,IAER,IAAMC,EAAYT,GAAaD,CAAS,EAClCW,EAAgBL,GAAiBN,CAAS,EAC1CY,EAASR,GAAcO,CAAa,EACtCE,EAAoBF,IAAkB,IAAMD,KAAeD,EAAM,MAAQ,SAAW,QAAU,OAASC,IAAc,QAAU,SAAW,MAC9I,OAAIF,EAAM,UAAUI,CAAM,EAAIJ,EAAM,SAASI,CAAM,IACjDC,EAAoBC,EAAqBD,CAAiB,GAErD,CAACA,EAAmBC,EAAqBD,CAAiB,CAAC,CACpE,CACA,SAASE,GAAsBf,EAAW,CACxC,IAAMgB,EAAoBF,EAAqBd,CAAS,EACxD,MAAO,CAACiB,GAA8BjB,CAAS,EAAGgB,EAAmBC,GAA8BD,CAAiB,CAAC,CACvH,CACA,SAASC,GAA8BjB,EAAW,CAChD,OAAOA,EAAU,QAAQ,aAAcU,GAAapB,GAAqBoB,CAAS,CAAC,CACrF,CACA,SAASQ,GAAYC,EAAMC,EAASX,EAAK,CACvC,IAAMY,EAAK,CAAC,OAAQ,OAAO,EACrBC,EAAK,CAAC,QAAS,MAAM,EACrBC,EAAK,CAAC,MAAO,QAAQ,EACrBC,EAAK,CAAC,SAAU,KAAK,EAC3B,OAAQL,EAAM,CACZ,IAAK,MACL,IAAK,SACH,OAAIV,EAAYW,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,CAAC,CACZ,CACF,CACA,SAASC,GAA0BzB,EAAW0B,EAAeC,EAAWlB,EAAK,CAC3E,IAAMC,EAAYT,GAAaD,CAAS,EACpC4B,EAAOV,GAAYnB,EAAQC,CAAS,EAAG2B,IAAc,QAASlB,CAAG,EACrE,OAAIC,IACFkB,EAAOA,EAAK,IAAIT,GAAQA,EAAO,IAAMT,CAAS,EAC1CgB,IACFE,EAAOA,EAAK,OAAOA,EAAK,IAAIX,EAA6B,CAAC,IAGvDW,CACT,CACA,SAASd,EAAqBd,EAAW,CACvC,OAAOA,EAAU,QAAQ,yBAA0BmB,GAAQ9B,GAAgB8B,CAAI,CAAC,CAClF,CACA,SAASU,GAAoBC,EAAS,CACpC,MAAO,CACL,IAAK,EACL,MAAO,EACP,OAAQ,EACR,KAAM,EACN,GAAGA,CACL,CACF,CACA,SAASC,GAAiBD,EAAS,CACjC,OAAO,OAAOA,GAAY,SAAWD,GAAoBC,CAAO,EAAI,CAClE,IAAKA,EACL,MAAOA,EACP,OAAQA,EACR,KAAMA,CACR,CACF,CACA,SAASE,EAAiBC,EAAM,CAC9B,GAAM,CACJ,EAAAC,EACA,EAAAC,EACA,MAAAC,EACA,OAAAC,CACF,EAAIJ,EACJ,MAAO,CACL,MAAAG,EACA,OAAAC,EACA,IAAKF,EACL,KAAMD,EACN,MAAOA,EAAIE,EACX,OAAQD,EAAIE,EACZ,EAAAH,EACA,EAAAC,CACF,CACF,CCpIA,SAASG,GAA2BC,EAAMC,EAAWC,EAAK,CACxD,GAAI,CACF,UAAAC,EACA,SAAAC,CACF,EAAIJ,EACEK,EAAWC,EAAYL,CAAS,EAChCM,EAAgBC,GAAiBP,CAAS,EAC1CQ,EAAcC,GAAcH,CAAa,EACzCI,EAAOC,EAAQX,CAAS,EACxBY,EAAaR,IAAa,IAC1BS,EAAUX,EAAU,EAAIA,EAAU,MAAQ,EAAIC,EAAS,MAAQ,EAC/DW,EAAUZ,EAAU,EAAIA,EAAU,OAAS,EAAIC,EAAS,OAAS,EACjEY,EAAcb,EAAUM,CAAW,EAAI,EAAIL,EAASK,CAAW,EAAI,EACrEQ,EACJ,OAAQN,EAAM,CACZ,IAAK,MACHM,EAAS,CACP,EAAGH,EACH,EAAGX,EAAU,EAAIC,EAAS,MAC5B,EACA,MACF,IAAK,SACHa,EAAS,CACP,EAAGH,EACH,EAAGX,EAAU,EAAIA,EAAU,MAC7B,EACA,MACF,IAAK,QACHc,EAAS,CACP,EAAGd,EAAU,EAAIA,EAAU,MAC3B,EAAGY,CACL,EACA,MACF,IAAK,OACHE,EAAS,CACP,EAAGd,EAAU,EAAIC,EAAS,MAC1B,EAAGW,CACL,EACA,MACF,QACEE,EAAS,CACP,EAAGd,EAAU,EACb,EAAGA,EAAU,CACf,CACJ,CACA,OAAQe,GAAajB,CAAS,EAAG,CAC/B,IAAK,QACHgB,EAAOV,CAAa,GAAKS,GAAed,GAAOW,EAAa,GAAK,GACjE,MACF,IAAK,MACHI,EAAOV,CAAa,GAAKS,GAAed,GAAOW,EAAa,GAAK,GACjE,KACJ,CACA,OAAOI,CACT,CASA,IAAME,GAAkB,MAAOhB,EAAWC,EAAUgB,IAAW,CAC7D,GAAM,CACJ,UAAAnB,EAAY,SACZ,SAAAoB,EAAW,WACX,WAAAC,EAAa,CAAC,EACd,SAAAC,CACF,EAAIH,EACEI,EAAkBF,EAAW,OAAO,OAAO,EAC3CpB,EAAM,MAAOqB,EAAS,OAAS,KAAO,OAASA,EAAS,MAAMnB,CAAQ,GACxEqB,EAAQ,MAAMF,EAAS,gBAAgB,CACzC,UAAApB,EACA,SAAAC,EACA,SAAAiB,CACF,CAAC,EACG,CACF,EAAAK,EACA,EAAAC,CACF,EAAI5B,GAA2B0B,EAAOxB,EAAWC,CAAG,EAChD0B,EAAoB3B,EACpB4B,EAAiB,CAAC,EAClBC,EAAa,EACjB,QAASC,EAAI,EAAGA,EAAIP,EAAgB,OAAQO,IAAK,CAC/C,GAAM,CACJ,KAAAC,EACA,GAAAC,CACF,EAAIT,EAAgBO,CAAC,EACf,CACJ,EAAGG,EACH,EAAGC,EACH,KAAAC,EACA,MAAAC,CACF,EAAI,MAAMJ,EAAG,CACX,EAAAP,EACA,EAAAC,EACA,iBAAkB1B,EAClB,UAAW2B,EACX,SAAAP,EACA,eAAAQ,EACA,MAAAJ,EACA,SAAAF,EACA,SAAU,CACR,UAAApB,EACA,SAAAC,CACF,CACF,CAAC,EACDsB,EAAIQ,GAAwBR,EAC5BC,EAAIQ,GAAwBR,EAC5BE,EAAiB,CACf,GAAGA,EACH,CAACG,CAAI,EAAG,CACN,GAAGH,EAAeG,CAAI,EACtB,GAAGI,CACL,CACF,EACIC,GAASP,GAAc,KACzBA,IACI,OAAOO,GAAU,WACfA,EAAM,YACRT,EAAoBS,EAAM,WAExBA,EAAM,QACRZ,EAAQY,EAAM,QAAU,GAAO,MAAMd,EAAS,gBAAgB,CAC5D,UAAApB,EACA,SAAAC,EACA,SAAAiB,CACF,CAAC,EAAIgB,EAAM,OAEZ,CACC,EAAAX,EACA,EAAAC,CACF,EAAI5B,GAA2B0B,EAAOG,EAAmB1B,CAAG,GAE9D6B,EAAI,GAER,CACA,MAAO,CACL,EAAAL,EACA,EAAAC,EACA,UAAWC,EACX,SAAAP,EACA,eAAAQ,CACF,CACF,EAUA,eAAeS,GAAeC,EAAOC,EAAS,CAC5C,IAAIC,EACAD,IAAY,SACdA,EAAU,CAAC,GAEb,GAAM,CACJ,EAAAd,EACA,EAAAC,EACA,SAAAJ,EACA,MAAAE,EACA,SAAAiB,EACA,SAAArB,CACF,EAAIkB,EACE,CACJ,SAAAI,EAAW,oBACX,aAAAC,EAAe,WACf,eAAAC,EAAiB,WACjB,YAAAC,EAAc,GACd,QAAAC,EAAU,CACZ,EAAIC,GAASR,EAASD,CAAK,EACrBU,EAAgBC,GAAiBH,CAAO,EAExCI,EAAUT,EAASI,EADND,IAAmB,WAAa,YAAc,WACbA,CAAc,EAC5DO,EAAqBC,EAAiB,MAAM9B,EAAS,gBAAgB,CACzE,SAAWkB,EAAwB,MAAOlB,EAAS,WAAa,KAAO,OAASA,EAAS,UAAU4B,CAAO,KAAO,MAAOV,EAAgCU,EAAUA,EAAQ,gBAAmB,MAAO5B,EAAS,oBAAsB,KAAO,OAASA,EAAS,mBAAmBmB,EAAS,QAAQ,GAChS,SAAAC,EACA,aAAAC,EACA,SAAAvB,CACF,CAAC,CAAC,EACIiC,EAAOT,IAAmB,WAAa,CAC3C,EAAAnB,EACA,EAAAC,EACA,MAAOF,EAAM,SAAS,MACtB,OAAQA,EAAM,SAAS,MACzB,EAAIA,EAAM,UACJ8B,EAAe,MAAOhC,EAAS,iBAAmB,KAAO,OAASA,EAAS,gBAAgBmB,EAAS,QAAQ,GAC5Gc,EAAe,MAAOjC,EAAS,WAAa,KAAO,OAASA,EAAS,UAAUgC,CAAY,GAAO,MAAOhC,EAAS,UAAY,KAAO,OAASA,EAAS,SAASgC,CAAY,IAAO,CACvL,EAAG,EACH,EAAG,CACL,EAAI,CACF,EAAG,EACH,EAAG,CACL,EACME,EAAoBJ,EAAiB9B,EAAS,sDAAwD,MAAMA,EAAS,sDAAsD,CAC/K,SAAAmB,EACA,KAAAY,EACA,aAAAC,EACA,SAAAlC,CACF,CAAC,EAAIiC,CAAI,EACT,MAAO,CACL,KAAMF,EAAmB,IAAMK,EAAkB,IAAMR,EAAc,KAAOO,EAAY,EACxF,QAASC,EAAkB,OAASL,EAAmB,OAASH,EAAc,QAAUO,EAAY,EACpG,MAAOJ,EAAmB,KAAOK,EAAkB,KAAOR,EAAc,MAAQO,EAAY,EAC5F,OAAQC,EAAkB,MAAQL,EAAmB,MAAQH,EAAc,OAASO,EAAY,CAClG,CACF,CAiMA,IAAME,GAAO,SAAUC,EAAS,CAC9B,OAAIA,IAAY,SACdA,EAAU,CAAC,GAEN,CACL,KAAM,OACN,QAAAA,EACA,MAAM,GAAGC,EAAO,CACd,IAAIC,EAAuBC,EAC3B,GAAM,CACJ,UAAAC,EACA,eAAAC,EACA,MAAAC,EACA,iBAAAC,EACA,SAAAC,EACA,SAAAC,CACF,EAAIR,EACE,CACJ,SAAUS,EAAgB,GAC1B,UAAWC,EAAiB,GAC5B,mBAAoBC,EACpB,iBAAAC,EAAmB,UACnB,0BAAAC,EAA4B,OAC5B,cAAAC,EAAgB,GAChB,GAAGC,CACL,EAAIC,GAASjB,EAASC,CAAK,EAM3B,IAAKC,EAAwBG,EAAe,QAAU,MAAQH,EAAsB,gBAClF,MAAO,CAAC,EAEV,IAAMgB,EAAOC,EAAQf,CAAS,EACxBgB,EAAkBC,EAAYd,CAAgB,EAC9Ce,EAAkBH,EAAQZ,CAAgB,IAAMA,EAChDgB,EAAM,MAAOf,EAAS,OAAS,KAAO,OAASA,EAAS,MAAMC,EAAS,QAAQ,GAC/Ee,EAAqBZ,IAAgCU,GAAmB,CAACP,EAAgB,CAACU,EAAqBlB,CAAgB,CAAC,EAAImB,GAAsBnB,CAAgB,GAC1KoB,EAA+Bb,IAA8B,OAC/D,CAACF,GAA+Be,GAClCH,EAAmB,KAAK,GAAGI,GAA0BrB,EAAkBQ,EAAeD,EAA2BS,CAAG,CAAC,EAEvH,IAAMM,EAAa,CAACtB,EAAkB,GAAGiB,CAAkB,EACrDM,EAAW,MAAMC,GAAe9B,EAAOe,CAAqB,EAC5DgB,EAAY,CAAC,EACfC,IAAkB9B,EAAuBE,EAAe,OAAS,KAAO,OAASF,EAAqB,YAAc,CAAC,EAIzH,GAHIO,GACFsB,EAAU,KAAKF,EAASZ,CAAI,CAAC,EAE3BP,EAAgB,CAClB,IAAMuB,EAAQC,GAAkB/B,EAAWE,EAAOiB,CAAG,EACrDS,EAAU,KAAKF,EAASI,EAAM,CAAC,CAAC,EAAGJ,EAASI,EAAM,CAAC,CAAC,CAAC,CACvD,CAOA,GANAD,EAAgB,CAAC,GAAGA,EAAe,CACjC,UAAA7B,EACA,UAAA4B,CACF,CAAC,EAGG,CAACA,EAAU,MAAMd,GAAQA,GAAQ,CAAC,EAAG,CACvC,IAAIkB,EAAuBC,EAC3B,IAAMC,KAAeF,EAAwB/B,EAAe,OAAS,KAAO,OAAS+B,EAAsB,QAAU,GAAK,EACpHG,GAAgBV,EAAWS,CAAS,EAC1C,GAAIC,GAEF,MAAO,CACL,KAAM,CACJ,MAAOD,EACP,UAAWL,CACb,EACA,MAAO,CACL,UAAWM,EACb,CACF,EAKF,IAAIC,GAAkBH,EAAwBJ,EAAc,OAAOQ,GAAKA,EAAE,UAAU,CAAC,GAAK,CAAC,EAAE,KAAK,CAACC,EAAGC,IAAMD,EAAE,UAAU,CAAC,EAAIC,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,IAAM,KAAO,OAASN,EAAsB,UAG1L,GAAI,CAACG,EACH,OAAQ3B,EAAkB,CACxB,IAAK,UACH,CACE,IAAI+B,EACJ,IAAMxC,GAAawC,EAAyBX,EAAc,OAAOQ,GAAK,CACpE,GAAId,EAA8B,CAChC,IAAMkB,EAAkBxB,EAAYoB,EAAE,SAAS,EAC/C,OAAOI,IAAoBzB,GAG3ByB,IAAoB,GACtB,CACA,MAAO,EACT,CAAC,EAAE,IAAIJ,GAAK,CAACA,EAAE,UAAWA,EAAE,UAAU,OAAOX,GAAYA,EAAW,CAAC,EAAE,OAAO,CAACgB,EAAKhB,KAAagB,EAAMhB,GAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAACY,EAAGC,IAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAM,KAAO,OAASC,EAAuB,CAAC,EAC7LxC,IACFoC,EAAiBpC,GAEnB,KACF,CACF,IAAK,mBACHoC,EAAiBjC,EACjB,KACJ,CAEF,GAAIH,IAAcoC,EAChB,MAAO,CACL,MAAO,CACL,UAAWA,CACb,CACF,CAEJ,CACA,MAAO,CAAC,CACV,CACF,CACF,EAmSA,IAAMO,GAAQ,SAAUC,EAAS,CAC/B,OAAIA,IAAY,SACdA,EAAU,CAAC,GAEN,CACL,KAAM,QACN,QAAAA,EACA,MAAM,GAAGC,EAAO,CACd,GAAM,CACJ,EAAAC,EACA,EAAAC,EACA,UAAAC,CACF,EAAIH,EACE,CACJ,SAAUI,EAAgB,GAC1B,UAAWC,EAAiB,GAC5B,QAAAC,EAAU,CACR,GAAIC,GAAQ,CACV,GAAI,CACF,EAAAN,EACA,EAAAC,CACF,EAAIK,EACJ,MAAO,CACL,EAAAN,EACA,EAAAC,CACF,CACF,CACF,EACA,GAAGM,CACL,EAAIC,GAASV,EAASC,CAAK,EACrBU,EAAS,CACb,EAAAT,EACA,EAAAC,CACF,EACMS,EAAW,MAAMC,GAAeZ,EAAOQ,CAAqB,EAC5DK,EAAYC,EAAYC,EAAQZ,CAAS,CAAC,EAC1Ca,EAAWC,GAAgBJ,CAAS,EACtCK,EAAgBR,EAAOM,CAAQ,EAC/BG,EAAiBT,EAAOG,CAAS,EACrC,GAAIT,EAAe,CACjB,IAAMgB,EAAUJ,IAAa,IAAM,MAAQ,OACrCK,EAAUL,IAAa,IAAM,SAAW,QACxCM,EAAMJ,EAAgBP,EAASS,CAAO,EACtCG,EAAML,EAAgBP,EAASU,CAAO,EAC5CH,EAAgBM,GAAMF,EAAKJ,EAAeK,CAAG,CAC/C,CACA,GAAIlB,EAAgB,CAClB,IAAMe,EAAUP,IAAc,IAAM,MAAQ,OACtCQ,EAAUR,IAAc,IAAM,SAAW,QACzCS,EAAMH,EAAiBR,EAASS,CAAO,EACvCG,EAAMJ,EAAiBR,EAASU,CAAO,EAC7CF,EAAiBK,GAAMF,EAAKH,EAAgBI,CAAG,CACjD,CACA,IAAME,EAAgBnB,EAAQ,GAAG,CAC/B,GAAGN,EACH,CAACgB,CAAQ,EAAGE,EACZ,CAACL,CAAS,EAAGM,CACf,CAAC,EACD,MAAO,CACL,GAAGM,EACH,KAAM,CACJ,EAAGA,EAAc,EAAIxB,EACrB,EAAGwB,EAAc,EAAIvB,EACrB,QAAS,CACP,CAACc,CAAQ,EAAGZ,EACZ,CAACS,CAAS,EAAGR,CACf,CACF,CACF,CACF,CACF,CACF,ECt3BA,SAASqB,IAAY,CACnB,OAAO,OAAO,OAAW,GAC3B,CACA,SAASC,EAAYC,EAAM,CACzB,OAAIC,GAAOD,CAAI,GACLA,EAAK,UAAY,IAAI,YAAY,EAKpC,WACT,CACA,SAASE,EAAUF,EAAM,CACvB,IAAIG,EACJ,OAAQH,GAAQ,OAASG,EAAsBH,EAAK,gBAAkB,KAAO,OAASG,EAAoB,cAAgB,MAC5H,CACA,SAASC,EAAmBJ,EAAM,CAChC,IAAIK,EACJ,OAAQA,GAAQJ,GAAOD,CAAI,EAAIA,EAAK,cAAgBA,EAAK,WAAa,OAAO,WAAa,KAAO,OAASK,EAAK,eACjH,CACA,SAASJ,GAAOK,EAAO,CACrB,OAAKR,GAAU,EAGRQ,aAAiB,MAAQA,aAAiBJ,EAAUI,CAAK,EAAE,KAFzD,EAGX,CACA,SAASC,EAAUD,EAAO,CACxB,OAAKR,GAAU,EAGRQ,aAAiB,SAAWA,aAAiBJ,EAAUI,CAAK,EAAE,QAF5D,EAGX,CACA,SAASE,EAAcF,EAAO,CAC5B,OAAKR,GAAU,EAGRQ,aAAiB,aAAeA,aAAiBJ,EAAUI,CAAK,EAAE,YAFhE,EAGX,CACA,SAASG,GAAaH,EAAO,CAC3B,MAAI,CAACR,GAAU,GAAK,OAAO,WAAe,IACjC,GAEFQ,aAAiB,YAAcA,aAAiBJ,EAAUI,CAAK,EAAE,UAC1E,CACA,SAASI,EAAkBC,EAAS,CAClC,GAAM,CACJ,SAAAC,EACA,UAAAC,EACA,UAAAC,EACA,QAAAC,CACF,EAAIC,EAAiBL,CAAO,EAC5B,MAAO,kCAAkC,KAAKC,EAAWE,EAAYD,CAAS,GAAK,CAAC,CAAC,SAAU,UAAU,EAAE,SAASE,CAAO,CAC7H,CACA,SAASE,GAAeN,EAAS,CAC/B,MAAO,CAAC,QAAS,KAAM,IAAI,EAAE,SAASZ,EAAYY,CAAO,CAAC,CAC5D,CACA,SAASO,EAAWP,EAAS,CAC3B,MAAO,CAAC,gBAAiB,QAAQ,EAAE,KAAKQ,GAAY,CAClD,GAAI,CACF,OAAOR,EAAQ,QAAQQ,CAAQ,CACjC,MAAY,CACV,MAAO,EACT,CACF,CAAC,CACH,CACA,SAASC,GAAkBC,EAAc,CACvC,IAAMC,EAASC,GAAS,EAClBC,EAAMjB,EAAUc,CAAY,EAAIL,EAAiBK,CAAY,EAAIA,EAIvE,MAAO,CAAC,YAAa,YAAa,QAAS,SAAU,aAAa,EAAE,KAAKf,GAASkB,EAAIlB,CAAK,EAAIkB,EAAIlB,CAAK,IAAM,OAAS,EAAK,IAAMkB,EAAI,cAAgBA,EAAI,gBAAkB,SAAW,KAAU,CAACF,IAAWE,EAAI,eAAiBA,EAAI,iBAAmB,OAAS,KAAU,CAACF,IAAWE,EAAI,OAASA,EAAI,SAAW,OAAS,KAAU,CAAC,YAAa,YAAa,QAAS,SAAU,cAAe,QAAQ,EAAE,KAAKlB,IAAUkB,EAAI,YAAc,IAAI,SAASlB,CAAK,CAAC,GAAK,CAAC,QAAS,SAAU,SAAU,SAAS,EAAE,KAAKA,IAAUkB,EAAI,SAAW,IAAI,SAASlB,CAAK,CAAC,CACniB,CACA,SAASmB,GAAmBd,EAAS,CACnC,IAAIe,EAAcC,EAAchB,CAAO,EACvC,KAAOH,EAAckB,CAAW,GAAK,CAACE,EAAsBF,CAAW,GAAG,CACxE,GAAIN,GAAkBM,CAAW,EAC/B,OAAOA,EACF,GAAIR,EAAWQ,CAAW,EAC/B,OAAO,KAETA,EAAcC,EAAcD,CAAW,CACzC,CACA,OAAO,IACT,CACA,SAASH,IAAW,CAClB,OAAI,OAAO,IAAQ,KAAe,CAAC,IAAI,SAAiB,GACjD,IAAI,SAAS,0BAA2B,MAAM,CACvD,CACA,SAASK,EAAsB5B,EAAM,CACnC,MAAO,CAAC,OAAQ,OAAQ,WAAW,EAAE,SAASD,EAAYC,CAAI,CAAC,CACjE,CACA,SAASgB,EAAiBL,EAAS,CACjC,OAAOT,EAAUS,CAAO,EAAE,iBAAiBA,CAAO,CACpD,CACA,SAASkB,GAAclB,EAAS,CAC9B,OAAIJ,EAAUI,CAAO,EACZ,CACL,WAAYA,EAAQ,WACpB,UAAWA,EAAQ,SACrB,EAEK,CACL,WAAYA,EAAQ,QACpB,UAAWA,EAAQ,OACrB,CACF,CACA,SAASgB,EAAc3B,EAAM,CAC3B,GAAID,EAAYC,CAAI,IAAM,OACxB,OAAOA,EAET,IAAM8B,EAEN9B,EAAK,cAELA,EAAK,YAELS,GAAaT,CAAI,GAAKA,EAAK,MAE3BI,EAAmBJ,CAAI,EACvB,OAAOS,GAAaqB,CAAM,EAAIA,EAAO,KAAOA,CAC9C,CACA,SAASC,GAA2B/B,EAAM,CACxC,IAAMgC,EAAaL,EAAc3B,CAAI,EACrC,OAAI4B,EAAsBI,CAAU,EAC3BhC,EAAK,cAAgBA,EAAK,cAAc,KAAOA,EAAK,KAEzDQ,EAAcwB,CAAU,GAAKtB,EAAkBsB,CAAU,EACpDA,EAEFD,GAA2BC,CAAU,CAC9C,CACA,SAASC,GAAqBjC,EAAMkC,EAAMC,EAAiB,CACzD,IAAIC,EACAF,IAAS,SACXA,EAAO,CAAC,GAENC,IAAoB,SACtBA,EAAkB,IAEpB,IAAME,EAAqBN,GAA2B/B,CAAI,EACpDsC,EAASD,MAAyBD,EAAuBpC,EAAK,gBAAkB,KAAO,OAASoC,EAAqB,MACrHG,EAAMrC,EAAUmC,CAAkB,EACxC,GAAIC,EAAQ,CACV,IAAME,EAAeC,GAAgBF,CAAG,EACxC,OAAOL,EAAK,OAAOK,EAAKA,EAAI,gBAAkB,CAAC,EAAG7B,EAAkB2B,CAAkB,EAAIA,EAAqB,CAAC,EAAGG,GAAgBL,EAAkBF,GAAqBO,CAAY,EAAI,CAAC,CAAC,CAC9L,CACA,OAAON,EAAK,OAAOG,EAAoBJ,GAAqBI,EAAoB,CAAC,EAAGF,CAAe,CAAC,CACtG,CACA,SAASM,GAAgBF,EAAK,CAC5B,OAAOA,EAAI,QAAU,OAAO,eAAeA,EAAI,MAAM,EAAIA,EAAI,aAAe,IAC9E,CClJA,SAASG,GAAiBC,EAAS,CACjC,IAAMC,EAAMC,EAAiBF,CAAO,EAGhCG,EAAQ,WAAWF,EAAI,KAAK,GAAK,EACjCG,EAAS,WAAWH,EAAI,MAAM,GAAK,EACjCI,EAAYC,EAAcN,CAAO,EACjCO,EAAcF,EAAYL,EAAQ,YAAcG,EAChDK,EAAeH,EAAYL,EAAQ,aAAeI,EAClDK,EAAiBC,EAAMP,CAAK,IAAMI,GAAeG,EAAMN,CAAM,IAAMI,EACzE,OAAIC,IACFN,EAAQI,EACRH,EAASI,GAEJ,CACL,MAAAL,EACA,OAAAC,EACA,EAAGK,CACL,CACF,CAEA,SAASE,GAAcX,EAAS,CAC9B,OAAQY,EAAUZ,CAAO,EAA6BA,EAAzBA,EAAQ,cACvC,CAEA,SAASa,EAASb,EAAS,CACzB,IAAMc,EAAaH,GAAcX,CAAO,EACxC,GAAI,CAACM,EAAcQ,CAAU,EAC3B,OAAOC,EAAa,CAAC,EAEvB,IAAMC,EAAOF,EAAW,sBAAsB,EACxC,CACJ,MAAAX,EACA,OAAAC,EACA,EAAAa,CACF,EAAIlB,GAAiBe,CAAU,EAC3BI,GAAKD,EAAIP,EAAMM,EAAK,KAAK,EAAIA,EAAK,OAASb,EAC3CgB,GAAKF,EAAIP,EAAMM,EAAK,MAAM,EAAIA,EAAK,QAAUZ,EAIjD,OAAI,CAACc,GAAK,CAAC,OAAO,SAASA,CAAC,KAC1BA,EAAI,IAEF,CAACC,GAAK,CAAC,OAAO,SAASA,CAAC,KAC1BA,EAAI,GAEC,CACL,EAAAD,EACA,EAAAC,CACF,CACF,CAEA,IAAMC,GAAyBL,EAAa,CAAC,EAC7C,SAASM,GAAiBrB,EAAS,CACjC,IAAMsB,EAAMC,EAAUvB,CAAO,EAC7B,MAAI,CAACwB,GAAS,GAAK,CAACF,EAAI,eACfF,GAEF,CACL,EAAGE,EAAI,eAAe,WACtB,EAAGA,EAAI,eAAe,SACxB,CACF,CACA,SAASG,GAAuBzB,EAAS0B,EAASC,EAAsB,CAItE,OAHID,IAAY,SACdA,EAAU,IAER,CAACC,GAAwBD,GAAWC,IAAyBJ,EAAUvB,CAAO,EACzE,GAEF0B,CACT,CAEA,SAASE,GAAsB5B,EAAS6B,EAAcC,EAAiBC,EAAc,CAC/EF,IAAiB,SACnBA,EAAe,IAEbC,IAAoB,SACtBA,EAAkB,IAEpB,IAAME,EAAahC,EAAQ,sBAAsB,EAC3Cc,EAAaH,GAAcX,CAAO,EACpCiC,EAAQlB,EAAa,CAAC,EACtBc,IACEE,EACEnB,EAAUmB,CAAY,IACxBE,EAAQpB,EAASkB,CAAY,GAG/BE,EAAQpB,EAASb,CAAO,GAG5B,IAAMkC,EAAgBT,GAAuBX,EAAYgB,EAAiBC,CAAY,EAAIV,GAAiBP,CAAU,EAAIC,EAAa,CAAC,EACnIG,GAAKc,EAAW,KAAOE,EAAc,GAAKD,EAAM,EAChDd,GAAKa,EAAW,IAAME,EAAc,GAAKD,EAAM,EAC/C9B,EAAQ6B,EAAW,MAAQC,EAAM,EACjC7B,EAAS4B,EAAW,OAASC,EAAM,EACvC,GAAInB,EAAY,CACd,IAAMQ,EAAMC,EAAUT,CAAU,EAC1BqB,EAAYJ,GAAgBnB,EAAUmB,CAAY,EAAIR,EAAUQ,CAAY,EAAIA,EAClFK,EAAad,EACbe,EAAgBC,GAAgBF,CAAU,EAC9C,KAAOC,GAAiBN,GAAgBI,IAAcC,GAAY,CAChE,IAAMG,EAAc1B,EAASwB,CAAa,EACpCG,EAAaH,EAAc,sBAAsB,EACjDpC,EAAMC,EAAiBmC,CAAa,EACpCI,EAAOD,EAAW,MAAQH,EAAc,WAAa,WAAWpC,EAAI,WAAW,GAAKsC,EAAY,EAChGG,EAAMF,EAAW,KAAOH,EAAc,UAAY,WAAWpC,EAAI,UAAU,GAAKsC,EAAY,EAClGrB,GAAKqB,EAAY,EACjBpB,GAAKoB,EAAY,EACjBpC,GAASoC,EAAY,EACrBnC,GAAUmC,EAAY,EACtBrB,GAAKuB,EACLtB,GAAKuB,EACLN,EAAab,EAAUc,CAAa,EACpCA,EAAgBC,GAAgBF,CAAU,CAC5C,CACF,CACA,OAAOO,EAAiB,CACtB,MAAAxC,EACA,OAAAC,EACA,EAAAc,EACA,EAAAC,CACF,CAAC,CACH,CAIA,SAASyB,GAAoB5C,EAASgB,EAAM,CAC1C,IAAM6B,EAAaC,GAAc9C,CAAO,EAAE,WAC1C,OAAKgB,EAGEA,EAAK,KAAO6B,EAFVjB,GAAsBmB,EAAmB/C,CAAO,CAAC,EAAE,KAAO6C,CAGrE,CAEA,SAASG,GAAcC,EAAiBC,EAAQC,EAAkB,CAC5DA,IAAqB,SACvBA,EAAmB,IAErB,IAAMC,EAAWH,EAAgB,sBAAsB,EACjD/B,EAAIkC,EAAS,KAAOF,EAAO,YAAcC,EAAmB,EAElEP,GAAoBK,EAAiBG,CAAQ,GACvCjC,EAAIiC,EAAS,IAAMF,EAAO,UAChC,MAAO,CACL,EAAAhC,EACA,EAAAC,CACF,CACF,CAEA,SAASkC,GAAsDC,EAAM,CACnE,GAAI,CACF,SAAAC,EACA,KAAAvC,EACA,aAAAe,EACA,SAAAyB,CACF,EAAIF,EACE5B,EAAU8B,IAAa,QACvBP,EAAkBF,EAAmBhB,CAAY,EACjD0B,EAAWF,EAAWG,EAAWH,EAAS,QAAQ,EAAI,GAC5D,GAAIxB,IAAiBkB,GAAmBQ,GAAY/B,EAClD,OAAOV,EAET,IAAIkC,EAAS,CACX,WAAY,EACZ,UAAW,CACb,EACIjB,EAAQlB,EAAa,CAAC,EACpB4C,EAAU5C,EAAa,CAAC,EACxB6C,EAA0BtD,EAAcyB,CAAY,EAC1D,IAAI6B,GAA2B,CAACA,GAA2B,CAAClC,MACtDmC,EAAY9B,CAAY,IAAM,QAAU+B,EAAkBb,CAAe,KAC3EC,EAASJ,GAAcf,CAAY,GAEjCzB,EAAcyB,CAAY,GAAG,CAC/B,IAAMgC,EAAanC,GAAsBG,CAAY,EACrDE,EAAQpB,EAASkB,CAAY,EAC7B4B,EAAQ,EAAII,EAAW,EAAIhC,EAAa,WACxC4B,EAAQ,EAAII,EAAW,EAAIhC,EAAa,SAC1C,CAEF,IAAMiC,EAAaf,GAAmB,CAACW,GAA2B,CAAClC,EAAUsB,GAAcC,EAAiBC,EAAQ,EAAI,EAAInC,EAAa,CAAC,EAC1I,MAAO,CACL,MAAOC,EAAK,MAAQiB,EAAM,EAC1B,OAAQjB,EAAK,OAASiB,EAAM,EAC5B,EAAGjB,EAAK,EAAIiB,EAAM,EAAIiB,EAAO,WAAajB,EAAM,EAAI0B,EAAQ,EAAIK,EAAW,EAC3E,EAAGhD,EAAK,EAAIiB,EAAM,EAAIiB,EAAO,UAAYjB,EAAM,EAAI0B,EAAQ,EAAIK,EAAW,CAC5E,CACF,CAEA,SAASC,GAAejE,EAAS,CAC/B,OAAO,MAAM,KAAKA,EAAQ,eAAe,CAAC,CAC5C,CAIA,SAASkE,GAAgBlE,EAAS,CAChC,IAAMmE,EAAOpB,EAAmB/C,CAAO,EACjCkD,EAASJ,GAAc9C,CAAO,EAC9BoE,EAAOpE,EAAQ,cAAc,KAC7BG,EAAQkE,EAAIF,EAAK,YAAaA,EAAK,YAAaC,EAAK,YAAaA,EAAK,WAAW,EAClFhE,EAASiE,EAAIF,EAAK,aAAcA,EAAK,aAAcC,EAAK,aAAcA,EAAK,YAAY,EACzFlD,EAAI,CAACgC,EAAO,WAAaN,GAAoB5C,CAAO,EAClDmB,EAAI,CAAC+B,EAAO,UAClB,OAAIhD,EAAiBkE,CAAI,EAAE,YAAc,QACvClD,GAAKmD,EAAIF,EAAK,YAAaC,EAAK,WAAW,EAAIjE,GAE1C,CACL,MAAAA,EACA,OAAAC,EACA,EAAAc,EACA,EAAAC,CACF,CACF,CAEA,SAASmD,GAAgBtE,EAASwD,EAAU,CAC1C,IAAMlC,EAAMC,EAAUvB,CAAO,EACvBmE,EAAOpB,EAAmB/C,CAAO,EACjCuE,EAAiBjD,EAAI,eACvBnB,EAAQgE,EAAK,YACb/D,EAAS+D,EAAK,aACdjD,EAAI,EACJC,EAAI,EACR,GAAIoD,EAAgB,CAClBpE,EAAQoE,EAAe,MACvBnE,EAASmE,EAAe,OACxB,IAAMC,EAAsBhD,GAAS,GACjC,CAACgD,GAAuBA,GAAuBhB,IAAa,WAC9DtC,EAAIqD,EAAe,WACnBpD,EAAIoD,EAAe,UAEvB,CACA,MAAO,CACL,MAAApE,EACA,OAAAC,EACA,EAAAc,EACA,EAAAC,CACF,CACF,CAGA,SAASsD,GAA2BzE,EAASwD,EAAU,CACrD,IAAMxB,EAAaJ,GAAsB5B,EAAS,GAAMwD,IAAa,OAAO,EACtEd,EAAMV,EAAW,IAAMhC,EAAQ,UAC/ByC,EAAOT,EAAW,KAAOhC,EAAQ,WACjCiC,EAAQ3B,EAAcN,CAAO,EAAIa,EAASb,CAAO,EAAIe,EAAa,CAAC,EACnEZ,EAAQH,EAAQ,YAAciC,EAAM,EACpC7B,EAASJ,EAAQ,aAAeiC,EAAM,EACtCf,EAAIuB,EAAOR,EAAM,EACjBd,EAAIuB,EAAMT,EAAM,EACtB,MAAO,CACL,MAAA9B,EACA,OAAAC,EACA,EAAAc,EACA,EAAAC,CACF,CACF,CACA,SAASuD,GAAkC1E,EAAS2E,EAAkBnB,EAAU,CAC9E,IAAIxC,EACJ,GAAI2D,IAAqB,WACvB3D,EAAOsD,GAAgBtE,EAASwD,CAAQ,UAC/BmB,IAAqB,WAC9B3D,EAAOkD,GAAgBnB,EAAmB/C,CAAO,CAAC,UACzCY,EAAU+D,CAAgB,EACnC3D,EAAOyD,GAA2BE,EAAkBnB,CAAQ,MACvD,CACL,IAAMtB,EAAgBb,GAAiBrB,CAAO,EAC9CgB,EAAO,CACL,EAAG2D,EAAiB,EAAIzC,EAAc,EACtC,EAAGyC,EAAiB,EAAIzC,EAAc,EACtC,MAAOyC,EAAiB,MACxB,OAAQA,EAAiB,MAC3B,CACF,CACA,OAAOhC,EAAiB3B,CAAI,CAC9B,CACA,SAAS4D,GAAyB5E,EAAS6E,EAAU,CACnD,IAAMC,EAAaC,EAAc/E,CAAO,EACxC,OAAI8E,IAAeD,GAAY,CAACjE,EAAUkE,CAAU,GAAKE,EAAsBF,CAAU,EAChF,GAEF5E,EAAiB4E,CAAU,EAAE,WAAa,SAAWF,GAAyBE,EAAYD,CAAQ,CAC3G,CAKA,SAASI,GAA4BjF,EAASkF,EAAO,CACnD,IAAMC,EAAeD,EAAM,IAAIlF,CAAO,EACtC,GAAImF,EACF,OAAOA,EAET,IAAIC,EAASC,GAAqBrF,EAAS,CAAC,EAAG,EAAK,EAAE,OAAOsF,GAAM1E,EAAU0E,CAAE,GAAKzB,EAAYyB,CAAE,IAAM,MAAM,EAC1GC,EAAsC,KACpCC,EAAiBtF,EAAiBF,CAAO,EAAE,WAAa,QAC1DyF,EAAcD,EAAiBT,EAAc/E,CAAO,EAAIA,EAG5D,KAAOY,EAAU6E,CAAW,GAAK,CAACT,EAAsBS,CAAW,GAAG,CACpE,IAAMC,EAAgBxF,EAAiBuF,CAAW,EAC5CE,EAA0BC,GAAkBH,CAAW,EACzD,CAACE,GAA2BD,EAAc,WAAa,UACzDH,EAAsC,OAEVC,EAAiB,CAACG,GAA2B,CAACJ,EAAsC,CAACI,GAA2BD,EAAc,WAAa,UAAY,CAAC,CAACH,GAAuC,CAAC,WAAY,OAAO,EAAE,SAASA,EAAoC,QAAQ,GAAKzB,EAAkB2B,CAAW,GAAK,CAACE,GAA2Bf,GAAyB5E,EAASyF,CAAW,GAGvZL,EAASA,EAAO,OAAOS,GAAYA,IAAaJ,CAAW,EAG3DF,EAAsCG,EAExCD,EAAcV,EAAcU,CAAW,CACzC,CACA,OAAAP,EAAM,IAAIlF,EAASoF,CAAM,EAClBA,CACT,CAIA,SAASU,GAAgBxC,EAAM,CAC7B,GAAI,CACF,QAAAtD,EACA,SAAA+F,EACA,aAAAC,EACA,SAAAxC,CACF,EAAIF,EAEE2C,EAAoB,CAAC,GADMF,IAAa,oBAAsBrC,EAAW1D,CAAO,EAAI,CAAC,EAAIiF,GAA4BjF,EAAS,KAAK,EAAE,EAAI,CAAC,EAAE,OAAO+F,CAAQ,EACzGC,CAAY,EAC9DE,EAAwBD,EAAkB,CAAC,EAC3CE,EAAeF,EAAkB,OAAO,CAACG,EAASzB,IAAqB,CAC3E,IAAM3D,EAAO0D,GAAkC1E,EAAS2E,EAAkBnB,CAAQ,EAClF,OAAA4C,EAAQ,IAAM/B,EAAIrD,EAAK,IAAKoF,EAAQ,GAAG,EACvCA,EAAQ,MAAQC,EAAIrF,EAAK,MAAOoF,EAAQ,KAAK,EAC7CA,EAAQ,OAASC,EAAIrF,EAAK,OAAQoF,EAAQ,MAAM,EAChDA,EAAQ,KAAO/B,EAAIrD,EAAK,KAAMoF,EAAQ,IAAI,EACnCA,CACT,EAAG1B,GAAkC1E,EAASkG,EAAuB1C,CAAQ,CAAC,EAC9E,MAAO,CACL,MAAO2C,EAAa,MAAQA,EAAa,KACzC,OAAQA,EAAa,OAASA,EAAa,IAC3C,EAAGA,EAAa,KAChB,EAAGA,EAAa,GAClB,CACF,CAEA,SAASG,GAActG,EAAS,CAC9B,GAAM,CACJ,MAAAG,EACA,OAAAC,CACF,EAAIL,GAAiBC,CAAO,EAC5B,MAAO,CACL,MAAAG,EACA,OAAAC,CACF,CACF,CAEA,SAASmG,GAA8BvG,EAAS+B,EAAcyB,EAAU,CACtE,IAAMI,EAA0BtD,EAAcyB,CAAY,EACpDkB,EAAkBF,EAAmBhB,CAAY,EACjDL,EAAU8B,IAAa,QACvBxC,EAAOY,GAAsB5B,EAAS,GAAM0B,EAASK,CAAY,EACnEmB,EAAS,CACX,WAAY,EACZ,UAAW,CACb,EACMS,EAAU5C,EAAa,CAAC,EAC9B,GAAI6C,GAA2B,CAACA,GAA2B,CAAClC,EAI1D,IAHImC,EAAY9B,CAAY,IAAM,QAAU+B,EAAkBb,CAAe,KAC3EC,EAASJ,GAAcf,CAAY,GAEjC6B,EAAyB,CAC3B,IAAMG,EAAanC,GAAsBG,EAAc,GAAML,EAASK,CAAY,EAClF4B,EAAQ,EAAII,EAAW,EAAIhC,EAAa,WACxC4B,EAAQ,EAAII,EAAW,EAAIhC,EAAa,SAC1C,MAAWkB,IAGTU,EAAQ,EAAIf,GAAoBK,CAAe,GAGnD,IAAMe,EAAaf,GAAmB,CAACW,GAA2B,CAAClC,EAAUsB,GAAcC,EAAiBC,CAAM,EAAInC,EAAa,CAAC,EAC9HG,EAAIF,EAAK,KAAOkC,EAAO,WAAaS,EAAQ,EAAIK,EAAW,EAC3D7C,EAAIH,EAAK,IAAMkC,EAAO,UAAYS,EAAQ,EAAIK,EAAW,EAC/D,MAAO,CACL,EAAA9C,EACA,EAAAC,EACA,MAAOH,EAAK,MACZ,OAAQA,EAAK,MACf,CACF,CAEA,SAASwF,GAAmBxG,EAAS,CACnC,OAAOE,EAAiBF,CAAO,EAAE,WAAa,QAChD,CAEA,SAASyG,GAAoBzG,EAAS0G,EAAU,CAC9C,GAAI,CAACpG,EAAcN,CAAO,GAAKE,EAAiBF,CAAO,EAAE,WAAa,QACpE,OAAO,KAET,GAAI0G,EACF,OAAOA,EAAS1G,CAAO,EAEzB,IAAI2G,EAAkB3G,EAAQ,aAM9B,OAAI+C,EAAmB/C,CAAO,IAAM2G,IAClCA,EAAkBA,EAAgB,cAAc,MAE3CA,CACT,CAIA,SAASC,GAAgB5G,EAAS0G,EAAU,CAC1C,IAAMpF,EAAMC,EAAUvB,CAAO,EAC7B,GAAI0D,EAAW1D,CAAO,EACpB,OAAOsB,EAET,GAAI,CAAChB,EAAcN,CAAO,EAAG,CAC3B,IAAI6G,EAAkB9B,EAAc/E,CAAO,EAC3C,KAAO6G,GAAmB,CAAC7B,EAAsB6B,CAAe,GAAG,CACjE,GAAIjG,EAAUiG,CAAe,GAAK,CAACL,GAAmBK,CAAe,EACnE,OAAOA,EAETA,EAAkB9B,EAAc8B,CAAe,CACjD,CACA,OAAOvF,CACT,CACA,IAAIS,EAAe0E,GAAoBzG,EAAS0G,CAAQ,EACxD,KAAO3E,GAAgB+E,GAAe/E,CAAY,GAAKyE,GAAmBzE,CAAY,GACpFA,EAAe0E,GAAoB1E,EAAc2E,CAAQ,EAE3D,OAAI3E,GAAgBiD,EAAsBjD,CAAY,GAAKyE,GAAmBzE,CAAY,GAAK,CAAC6D,GAAkB7D,CAAY,EACrHT,EAEFS,GAAgBgF,GAAmB/G,CAAO,GAAKsB,CACxD,CAEA,IAAM0F,GAAkB,eAAgBC,EAAM,CAC5C,IAAMC,EAAoB,KAAK,iBAAmBN,GAC5CO,EAAkB,KAAK,cACvBC,EAAqB,MAAMD,EAAgBF,EAAK,QAAQ,EAC9D,MAAO,CACL,UAAWV,GAA8BU,EAAK,UAAW,MAAMC,EAAkBD,EAAK,QAAQ,EAAGA,EAAK,QAAQ,EAC9G,SAAU,CACR,EAAG,EACH,EAAG,EACH,MAAOG,EAAmB,MAC1B,OAAQA,EAAmB,MAC7B,CACF,CACF,EAEA,SAASC,GAAMrH,EAAS,CACtB,OAAOE,EAAiBF,CAAO,EAAE,YAAc,KACjD,CAEA,IAAMsH,GAAW,CACf,sDAAAjE,GACA,mBAAAN,EACA,gBAAA+C,GACA,gBAAAc,GACA,gBAAAI,GACA,eAAA/C,GACA,cAAAqC,GACA,SAAAzF,EACA,UAAAD,EACA,MAAAyG,EACF,EA6MA,IAAME,GAAQA,GAQRC,GAAOA,GAwCb,IAAMC,GAAkB,CAACC,EAAWC,EAAUC,IAAY,CAIxD,IAAMC,EAAQ,IAAI,IACZC,EAAgB,CACpB,SAAAC,GACA,GAAGH,CACL,EACMI,EAAoB,CACxB,GAAGF,EAAc,SACjB,GAAID,CACN,EACA,OAAOJ,GAAkBC,EAAWC,EAAU,CAC5C,GAAGG,EACH,SAAUE,CACZ,CAAC,CACH,EC7uBA,IAAAC,GAAA,CACE,iBAAoB,EACpB,KAAQ,mDACR,QAAW,MACX,YAAe,iTACf,YAAe,CACb,YACA,WACF,EACA,iBAAoB,CAClB,0BACA,6BACA,0BACF,EACA,gBAAmB,CACjB,CACE,QAAW,CACT,aACF,EACA,GAAM,CACJ,YACF,CACF,CACF,EACA,OAAU,CACR,cAAiB,iCACjB,aAAgB,sBAClB,EACA,WAAc,CACZ,eAAkB,eACpB,CACF,GC5BC,UAAY,CACX,QAAQ,IAAI,oEAAuB,EAEnC,IAAIC,EAAY,CAAC,EACjB,GAAI,CAEF,IAAMC,EAAkBC,GAAS,iBACjC,GAAI,MAAM,QAAQD,CAAe,GAAKA,EAAgB,OAAS,EAAG,CAEhE,IAAME,EAAiB,IAAI,IAAI,SAAS,IAAI,EAAE,OAC9C,GACEF,EAAgB,KAAMG,GAAQ,IAAI,IAAIA,CAAG,EAAE,SAAWD,CAAc,EAEpEH,EAAYC,EAAgB,IAAKG,GAAQ,IAAI,IAAIA,CAAG,EAAE,MAAM,MAE5D,OAAM,IAAI,MACR,4GACF,CAEJ,KACE,OAAM,IAAI,MAAM,qFAA8B,CAElD,OAASC,EAAO,CACd,QAAQ,MAAM,uFAA4BA,CAAK,EAC/CL,EAAY,CAAC,GAAG,CAClB,CACA,QAAQ,IAAI,wBAAiBA,EAAU,KAAK,IAAI,CAAC,EAAE,EAWnD,IAAMM,EAAiB,CACrB,QAAS,UACT,MAAO,QACP,QAAS,SACX,EAGIC,EAAiB,KACjBC,EAAmB,GACnBC,EAAyB,GACvBC,EAAW,IAAI,IACfC,EAAe,IAAI,IAGzB,SAASC,EAAkBC,EAASC,EAAO,CAyBzC,IAAMC,EAxBc,CAClB,CAACT,EAAe,OAAO,EAAG,CACxB,KAAM,OACN,gBAAiB,OACjB,YAAa,QACf,EACA,CAACA,EAAe,KAAK,EAAG,CACtB,KAAM,SACN,gBAAiB,OACjB,YAAa,QACf,EACA,CAACA,EAAe,OAAO,EAAG,CACxB,KAAM,OACN,gBACE,wXACF,YAAa,MACb,iBAAkB,CAChB,iBAAkB,YAClB,mBAAoB,SACpB,eAAgB,SAClB,CACF,CACF,EAE2BQ,CAAK,EAChC,GAAI,CAACC,EAAQ,OAEbF,EAAQ,UAAYE,EAAO,KAC3BF,EAAQ,MAAM,gBAAkBE,EAAO,gBACvCF,EAAQ,QAAQ,MAAQC,EACxBD,EAAQ,UAAUE,EAAO,WAAW,EAAE,SAAS,EAG3CA,EAAO,kBACT,OAAO,OAAOF,EAAQ,MAAOE,EAAO,gBAAgB,EAGtD,IAAMC,EAAaH,EAAQ,QAAQ,IACnC,GAAIG,EAAY,CAEd,IAAMC,EAAaP,EAAS,IAAIM,CAAU,GAAK,CAAC,EAChDN,EAAS,IAAIM,EAAY,CAAE,GAAGC,EAAY,MAAAH,CAAM,CAAC,CACnD,CAEIA,IAAUR,EAAe,QAC3BK,EAAa,IAAIE,EAAQ,QAAQ,GAAG,EAEpCF,EAAa,OAAOE,EAAQ,QAAQ,GAAG,CAE3C,CAGA,SAASK,EAAcC,EAASC,EAAW,CACzC,IAAMP,EAAU,SAAS,cAAc,QAAQ,EAC/C,OAAO,OAAOA,EAAQ,MAAO,CAC3B,SAAU,WACV,gBAAiB,yBACjB,MAAO,2BACP,QAAS,IACT,OAAQ,qCACR,aAAc,MACd,SAAU,OACV,WAAY,IACZ,OAAQ,aAAaO,EAAU,YAAY,OAAOA,EAAU,WAAW,MACvE,MAAO,aAAaA,EAAU,YAAY,OAAOA,EAAU,WAAW,MACtE,OAAQ,OACR,WAAY,SACZ,OAAQ,UACR,UAAW,gCACb,CAAC,EACDP,EAAQ,UAAY,UACpBA,EAAQ,UAAYM,EACpBN,EAAQ,QAAQ,YAAc,mCAE9B,IAAIG,EAAaK,EAAcD,CAAS,EACpCE,EACFF,EAAU,cAAc,GAAG,GAAG,YAAY,KAAK,GAC/C,+DAGF,GAFAP,EAAQ,QAAQ,IAAMG,EAElBA,EAAY,CACd,IAAMC,EAAaP,EAAS,IAAIM,CAAU,EACtCL,EAAa,IAAIK,CAAU,EAC7BJ,EAAkBC,EAASP,EAAe,OAAO,EACxCW,GAAcA,EAAW,QAAUX,EAAe,MAC3DM,EAAkBC,EAASP,EAAe,KAAK,EAE/CM,EAAkBC,EAASP,EAAe,OAAO,CAErD,MACEM,EAAkBC,EAASP,EAAe,OAAO,EAGnD,OAAAO,EAAQ,iBAAiB,QAAUU,GACjCC,EAAmBD,EAAGD,EAAaT,EAASO,CAAS,CACvD,EACAP,EAAQ,iBAAiB,aAAc,IAAOL,EAAmB,EAAK,EACtEK,EAAQ,iBAAiB,aAAc,IACrCY,EAAwBZ,CAAO,CACjC,EAEOA,CACT,CAGA,SAASQ,EAAcD,EAAW,CAChC,GAAIA,EAAU,UAAY,IAAK,OAAOA,EAAU,KAChD,IAAMM,EAAYN,EAAU,cAAc,GAAG,EAC7C,GAAIM,EAAW,OAAOA,EAAU,KAChC,IAAMC,EAAaP,EAAU,QAAQ,GAAG,EACxC,OAAOO,EAAaA,EAAW,KAAO,IACxC,CAGA,SAASH,EAAmBI,EAAON,EAAaT,EAASO,EAAW,CAClEQ,EAAM,gBAAgB,EACtBA,EAAM,eAAe,EAErB,IAAMZ,EAAaH,EAAQ,QAAQ,IACnC,GAAI,CAACG,EAAY,CACf,QAAQ,MAAM,yFAAmB,EACjC,MACF,CAEA,GAAIH,EAAQ,QAAQ,QAAUP,EAAe,MAAO,CAClDuB,EAAcT,CAAS,EACvBR,EAAkBC,EAASP,EAAe,OAAO,EACjD,MACF,CAEA,GAAIK,EAAa,IAAIK,CAAU,EAAG,CAChC,QAAQ,IAAI,uFAAiB,EAC7B,MACF,CAEAJ,EAAkBC,EAASP,EAAe,OAAO,EACjDwB,EAAcd,EAAYI,EAAWE,EAAaT,CAAO,EAAE,QAAQ,IAAM,CACnEA,EAAQ,QAAQ,QAAUP,EAAe,SAC3CM,EAAkBC,EAASP,EAAe,OAAO,CAErD,CAAC,CACH,CAGA,SAASmB,EAAwBZ,EAAS,CACpC,CAACL,GAAoBK,EAAQ,QAAQ,QAAUP,EAAe,SAChEyB,EAAclB,CAAO,EACrBN,EAAiB,MAEjBC,EAAmB,EAEvB,CAGA,SAASsB,EAAcd,EAAYI,EAAWE,EAAaT,EAAS,CAClE,OAAO,IAAI,QAAQ,CAACmB,EAASC,IAAW,CAEtC,GAAIvB,EAAS,IAAIM,CAAU,EAAG,CAC5B,IAAMC,EAAaP,EAAS,IAAIM,CAAU,EAC1C,GAAIC,GAAcA,EAAW,KAAM,CACjCiB,EAAejB,EAAW,KAAMG,EAAWP,CAAO,EAClDD,EAAkBC,EAASP,EAAe,KAAK,EAC/C0B,EAAQ,EACR,MACF,CACF,CAEA,MAAM,iCAAkC,CACtC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,IAAKhB,EACL,kBAAmBM,CACrB,CAAC,CACH,CAAC,EACE,KAAMa,GAAQ,CACb,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAM,2BAAYA,EAAI,MAAM,EAAE,EAE1C,OAAOA,EAAI,KAAK,CAClB,CAAC,EACA,KAAMC,GAAS,CACd,GAAI,CAACA,GAAQ,OAAOA,GAAS,UAAY,CAACA,EAAK,SAC7C,MAAM,IAAI,MAAM,4FAAiB,EAInC1B,EAAS,IAAIM,EAAY,CAAE,KAAAoB,EAAM,MAAO9B,EAAe,KAAM,CAAC,EAE9D4B,EAAeE,EAAMhB,EAAWP,CAAO,EACvCD,EAAkBC,EAASP,EAAe,KAAK,EAC/C0B,EAAQ,CACV,CAAC,EACA,MAAO3B,GAAU,CAChB,QAAQ,MAAM,8FAAoBA,CAAK,EACvCO,EAAkBC,EAASP,EAAe,OAAO,EACjD2B,EAAO5B,CAAK,CACd,CAAC,CACL,CAAC,CACH,CAEA,SAASwB,EAAcT,EAAW,CAChC,IAAMiB,EAAUjB,EAAU,cAAc,UAAU,EAC9CiB,GACFA,EAAQ,OAAO,EAIjB,IAAMrB,EAAaK,EAAcD,CAAS,EAC1C,GAAIJ,EAAY,CACd,IAAMC,EAAaP,EAAS,IAAIM,CAAU,GAAK,CAAC,EAChDN,EAAS,IAAIM,EAAY,CACvB,GAAGC,EACH,MAAOX,EAAe,OACxB,CAAC,CACH,CACF,CAGA,SAAS4B,EAAeE,EAAMhB,EAAWP,EAAS,CAChD,GAAI,CAACuB,GAAQ,CAACA,EAAK,SAAU,CAC3B,QAAQ,MAAM,sEAAgBA,CAAI,EAClC,MACF,CAEA,IAAIE,EAEJ,GADAA,EAAWlB,EAAU,QAAQ,IAAI,EAC7B,CAACkB,IACHA,EAAWlB,EAAU,QAAQ,GAAG,EAC5B,CAACkB,GAAU,CACb,QAAQ,MAAM,yFAAmB,EACjC,MACF,CAGF,IAAMC,EAAcD,EAAS,YAGvBE,EAAcpB,EAAU,cAAc,GAAG,GAAKA,EAAU,QAAQ,GAAG,EACnEqB,EAAWD,EACb,iBAAiBA,CAAW,EAAE,SAC9B,OAEEH,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,UACpBA,EAAQ,UAAY,aAAMD,EAAK,QAAQ,GACvC,OAAO,OAAOC,EAAQ,MAAO,CAC3B,SAAU,WACV,OAAQ,mBACR,KAAM,MACN,UAAW,mBACX,MAAO,GAAGE,CAAW,KACrB,gBAAiB,2BACjB,MAAO,qBACP,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,SAAUE,EACV,UACE,kEACF,aAAc,MACd,QAAS,MACT,OAAQ,OACR,cAAe,OACf,UAAW,SACX,cAAe,eACjB,CAAC,EAED,IAAMC,EAAW,SAAS,gBACxB,6BACA,KACF,EACAA,EAAS,aAAa,QAAS,IAAI,EACnCA,EAAS,aAAa,SAAU,IAAI,EACpCA,EAAS,aAAa,UAAW,WAAW,EAC5CA,EAAS,MAAM,SAAW,WAC1BA,EAAS,MAAM,OAAS,QACxBA,EAAS,MAAM,KAAO,MACtBA,EAAS,MAAM,UAAY,mBAC3BA,EAAS,MAAM,OAAS,MAGxB,IAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1C,OAAO,OAAOA,EAAM,MAAO,CACzB,QAAS,KACT,SAAU,WACV,OAAQ,OACR,KAAM,MACN,UAAW,mBACX,MAAO,IACP,OAAQ,IACR,WAAY,yBACZ,YAAa,yBACb,UAAW,mCACX,OAAQ,KACV,CAAC,EAGD,IAAMC,EAAa,SAAS,cAAc,KAAK,EAC/C,OAAO,OAAOA,EAAW,MAAO,CAC9B,QAAS,KACT,SAAU,WACV,OAAQ,OACR,KAAM,MACN,UAAW,mBACX,MAAO,IACP,OAAQ,IACR,WAAY,yBACZ,YAAa,yBACb,UAAW,qCACX,OAAQ,MACV,CAAC,EAEDP,EAAQ,YAAYM,CAAK,EACzBN,EAAQ,YAAYO,CAAU,EAE9BN,EAAS,MAAM,SAAW,WAC1BA,EAAS,YAAYD,CAAO,EAG5BzB,EAAkBC,EAASP,EAAe,KAAK,CACjD,CAGA,SAASuC,EAAYzB,EAAWP,EAAS,CACvCiC,GAAgB1B,EAAWP,EAAS,CAClC,UAAW,QACX,WAAY,CAACkC,GAAM,EAAGC,GAAK,CAAC,CAC9B,CAAC,EAAE,KAAK,CAAC,CAAE,EAAAC,EAAG,EAAAC,CAAE,IAAM,CACpB,OAAO,OAAOrC,EAAQ,MAAO,CAC3B,KAAM,GAAGoC,EAAI,EAAE,KACf,IAAK,GAAGC,CAAC,IACX,CAAC,CACH,CAAC,CACH,CAGA,SAASnB,EAAclB,EAAS,CAC1BA,GAAWA,EAAQ,YACrBA,EAAQ,WAAW,YAAYA,CAAO,CAE1C,CAGA,SAASsC,EAAkBC,EAAY,CACrC,IAAMC,EAAeD,EAAW,OAC5BC,IAAiB5C,IACnB,QAAQ,IAAI,6DAAc4C,CAAY,SAAI,EAC1C5C,EAAyB4C,EAE7B,CAGA,SAASC,GAAgB,CAEvB,IAAMF,EAAa,MAAM,KACvB,SAAS,iBAAiB,YAAY,CACxC,EAAE,OAAQG,GAAY,CACpB,IAAMC,EAAOD,EAAQ,cAAc,GAAG,GAAKA,EAAQ,QAAQ,GAAG,EAC9D,OAAKC,EAMDxD,EAAU,SAAS,GAAG,EACjB,GAIFA,EAAU,KAAMyD,GAAYD,EAAK,KAAK,WAAWC,CAAO,CAAC,GAV9D,QAAQ,KAAK,oHAA2BF,CAAO,EACxC,GAUX,CAAC,EAEDJ,EAAkBC,CAAU,EAE5BA,EAAW,QAAShC,GAAc,CAC3BA,EAAU,QAAQ,qBACrBA,EAAU,QAAQ,mBAAqB,OAGvCA,EAAU,iBAAiB,aAAc,IAAM,CAC7C,IAAMD,EAAU,OAGZZ,IACFwB,EAAcxB,CAAc,EAC5BA,EAAiB,MAInB,IAAMM,EAAUK,EAAcC,EAASC,CAAS,EAChDb,EAAiBM,EAEjB,SAAS,KAAK,YAAYA,CAAO,EACjCgC,EAAYzB,EAAWP,CAAO,EAG9B,IAAMyB,EAAWlB,EAAU,QAAQ,IAAI,EACnCkB,IACFA,EAAS,MAAM,SAAW,WAoB5B,IAAItB,EAAa,KACjB,GAAII,EAAU,UAAY,IACxBJ,EAAaI,EAAU,aACdA,EAAU,cAAc,GAAG,EACpCJ,EAAaI,EAAU,cAAc,GAAG,EAAE,SACrC,CACL,IAAMO,EAAaP,EAAU,QAAQ,GAAG,EACpCO,IACFX,EAAaW,EAAW,KAE5B,CACIX,GAAcL,EAAa,IAAIK,CAAU,IAC3CJ,EAAkBC,EAASP,EAAe,OAAO,EACjDK,EAAa,OAAOK,CAAU,EAElC,CAAC,EAGDI,EAAU,iBAAiB,aAAc,IAAM,CACzC,CAACZ,GAAoBD,IACvBwB,EAAcxB,CAAc,EAC5BA,EAAiB,KAErB,CAAC,EAEL,CAAC,CACH,CAGiB,IAAI,iBAAkBmD,GAAc,CACnDA,EAAU,QAASC,GAAa,CAE9B,GACEA,EAAS,OAAS,cAClBA,EAAS,gBAAkB,QAC3B,CACA,IAAMC,EAASD,EAAS,OACpBC,EAAO,UAAU,SAAS,QAAQ,IACpC,QAAQ,IAAI,uFAAyBA,EAAO,EAAE,EAAE,EAChDN,EAAc,EAElB,CAGIK,EAAS,OAAS,aAAeA,EAAS,WAAW,OAAS,GAChEL,EAAc,CAElB,CAAC,CACH,CAAC,EAGQ,QAAQ,SAAS,KAAM,CAC9B,UAAW,GACX,QAAS,GACT,WAAY,GACZ,gBAAiB,CAAC,OAAO,CAC3B,CAAC,EAGDA,EAAc,CAChB,GAAG",
  "names": ["min", "max", "round", "createCoords", "v", "oppositeSideMap", "oppositeAlignmentMap", "clamp", "start", "value", "end", "max", "min", "evaluate", "param", "getSide", "placement", "getAlignment", "getOppositeAxis", "axis", "getAxisLength", "getSideAxis", "getAlignmentAxis", "getAlignmentSides", "rects", "rtl", "alignment", "alignmentAxis", "length", "mainAlignmentSide", "getOppositePlacement", "getExpandedPlacements", "oppositePlacement", "getOppositeAlignmentPlacement", "getSideList", "side", "isStart", "lr", "rl", "tb", "bt", "getOppositeAxisPlacements", "flipAlignment", "direction", "list", "expandPaddingObject", "padding", "getPaddingObject", "rectToClientRect", "rect", "x", "y", "width", "height", "computeCoordsFromPlacement", "_ref", "placement", "rtl", "reference", "floating", "sideAxis", "getSideAxis", "alignmentAxis", "getAlignmentAxis", "alignLength", "getAxisLength", "side", "getSide", "isVertical", "commonX", "commonY", "commonAlign", "coords", "getAlignment", "computePosition", "config", "strategy", "middleware", "platform", "validMiddleware", "rects", "x", "y", "statefulPlacement", "middlewareData", "resetCount", "i", "name", "fn", "nextX", "nextY", "data", "reset", "detectOverflow", "state", "options", "_await$platform$isEle", "elements", "boundary", "rootBoundary", "elementContext", "altBoundary", "padding", "evaluate", "paddingObject", "getPaddingObject", "element", "clippingClientRect", "rectToClientRect", "rect", "offsetParent", "offsetScale", "elementClientRect", "flip", "options", "state", "_middlewareData$arrow", "_middlewareData$flip", "placement", "middlewareData", "rects", "initialPlacement", "platform", "elements", "checkMainAxis", "checkCrossAxis", "specifiedFallbackPlacements", "fallbackStrategy", "fallbackAxisSideDirection", "flipAlignment", "detectOverflowOptions", "evaluate", "side", "getSide", "initialSideAxis", "getSideAxis", "isBasePlacement", "rtl", "fallbackPlacements", "getOppositePlacement", "getExpandedPlacements", "hasFallbackAxisSideDirection", "getOppositeAxisPlacements", "placements", "overflow", "detectOverflow", "overflows", "overflowsData", "sides", "getAlignmentSides", "_middlewareData$flip2", "_overflowsData$filter", "nextIndex", "nextPlacement", "resetPlacement", "d", "a", "b", "_overflowsData$filter2", "currentSideAxis", "acc", "shift", "options", "state", "x", "y", "placement", "checkMainAxis", "checkCrossAxis", "limiter", "_ref", "detectOverflowOptions", "evaluate", "coords", "overflow", "detectOverflow", "crossAxis", "getSideAxis", "getSide", "mainAxis", "getOppositeAxis", "mainAxisCoord", "crossAxisCoord", "minSide", "maxSide", "min", "max", "clamp", "limitedCoords", "hasWindow", "getNodeName", "node", "isNode", "getWindow", "_node$ownerDocument", "getDocumentElement", "_ref", "value", "isElement", "isHTMLElement", "isShadowRoot", "isOverflowElement", "element", "overflow", "overflowX", "overflowY", "display", "getComputedStyle", "isTableElement", "isTopLayer", "selector", "isContainingBlock", "elementOrCss", "webkit", "isWebKit", "css", "getContainingBlock", "currentNode", "getParentNode", "isLastTraversableNode", "getNodeScroll", "result", "getNearestOverflowAncestor", "parentNode", "getOverflowAncestors", "list", "traverseIframes", "_node$ownerDocument2", "scrollableAncestor", "isBody", "win", "frameElement", "getFrameElement", "getCssDimensions", "element", "css", "getComputedStyle", "width", "height", "hasOffset", "isHTMLElement", "offsetWidth", "offsetHeight", "shouldFallback", "round", "unwrapElement", "isElement", "getScale", "domElement", "createCoords", "rect", "$", "x", "y", "noOffsets", "getVisualOffsets", "win", "getWindow", "isWebKit", "shouldAddVisualOffsets", "isFixed", "floatingOffsetParent", "getBoundingClientRect", "includeScale", "isFixedStrategy", "offsetParent", "clientRect", "scale", "visualOffsets", "offsetWin", "currentWin", "currentIFrame", "getFrameElement", "iframeScale", "iframeRect", "left", "top", "rectToClientRect", "getWindowScrollBarX", "leftScroll", "getNodeScroll", "getDocumentElement", "getHTMLOffset", "documentElement", "scroll", "ignoreScrollbarX", "htmlRect", "convertOffsetParentRelativeRectToViewportRelativeRect", "_ref", "elements", "strategy", "topLayer", "isTopLayer", "offsets", "isOffsetParentAnElement", "getNodeName", "isOverflowElement", "offsetRect", "htmlOffset", "getClientRects", "getDocumentRect", "html", "body", "max", "getViewportRect", "visualViewport", "visualViewportBased", "getInnerBoundingClientRect", "getClientRectFromClippingAncestor", "clippingAncestor", "hasFixedPositionAncestor", "stopNode", "parentNode", "getParentNode", "isLastTraversableNode", "getClippingElementAncestors", "cache", "cachedResult", "result", "getOverflowAncestors", "el", "currentContainingBlockComputedStyle", "elementIsFixed", "currentNode", "computedStyle", "currentNodeIsContaining", "isContainingBlock", "ancestor", "getClippingRect", "boundary", "rootBoundary", "clippingAncestors", "firstClippingAncestor", "clippingRect", "accRect", "min", "getDimensions", "getRectRelativeToOffsetParent", "isStaticPositioned", "getTrueOffsetParent", "polyfill", "rawOffsetParent", "getOffsetParent", "svgOffsetParent", "isTableElement", "getContainingBlock", "getElementRects", "data", "getOffsetParentFn", "getDimensionsFn", "floatingDimensions", "isRTL", "platform", "shift", "flip", "computePosition", "reference", "floating", "options", "cache", "mergedOptions", "platform", "platformWithCache", "manifest_default", "BASE_URLS", "hostPermissions", "manifest_default", "currentBaseUrl", "url", "error", "TOOLTIP_STATES", "currentTooltip", "isTooltipHovered", "previousReferenceCount", "urlCache", "loadingCache", "updateButtonState", "tooltip", "state", "config", "articleUrl", "cachedData", "createTooltip", "content", "reference", "getArticleUrl", "articleText", "e", "handleTooltipClick", "handleTooltipMouseLeave", "childLink", "parentLink", "event", "removeOverlay", "fetchHeadline", "removeTooltip", "resolve", "reject", "displayOverlay", "res", "data", "overlay", "parentLi", "parentWidth", "linkElement", "fontSize", "arrowSvg", "arrow", "innerArrow", "showTooltip", "computePosition", "shift", "flip", "x", "y", "logReferenceCount", "references", "currentCount", "setupTooltips", "element", "link", "baseUrl", "mutations", "mutation", "target"]
}
